{"version":3,"sources":["webpack:///dist/index.js","webpack:///webpack/bootstrap d58f580ab5448825b293","webpack:///./src/eth/eth-engine.ts","webpack:///./src/eth-tokens/augur.ts","webpack:///./src/index.ts","webpack:///./src/eth/index.ts","webpack:///./src/eth/eth-wallet.ts","webpack:///./src/config/config-eth.ts","webpack:///external \"web3/src\"","webpack:///external \"axios\"","webpack:///external \"hdkey\"","webpack:///./src/eth/tokens/ERC20.ts","webpack:///./src/config/abi/util/abiutil.ts","webpack:///./src/hd-bip44/seed.ts","webpack:///external \"bip39\"","webpack:///./src/eth-tokens/index.ts","webpack:///./src/eth-tokens/token-factory.ts","webpack:///./src/eth-tokens/aragon.ts","webpack:///./src/eth-tokens/bat.ts","webpack:///./src/eth-tokens/eos.ts","webpack:///./src/eth-tokens/gnosis.ts","webpack:///./src/eth-tokens/golem.ts","webpack:///./src/eth-tokens/salt.ts","webpack:///./src/eth-tokens/civic.ts","webpack:///./src/eth-tokens/omisego.ts","webpack:///./src/eth-tokens/district0x.ts","webpack:///./src/eth-tokens/statusnetwork.ts","webpack:///./src/eth-tokens/substratum.ts","webpack:///./src/eth-tokens/tron.ts","webpack:///./src/eth-tokens/bytom.ts","webpack:///./src/eth-tokens/dent.ts","webpack:///./src/eth-tokens/populous.ts","webpack:///./src/eth-tokens/maker.ts","webpack:///./src/eth-tokens/digixdao.ts","webpack:///./src/eth-tokens/qash.ts","webpack:///./src/eth-tokens/ethos.ts","webpack:///./src/eth-tokens/funfair.ts","webpack:///./src/eth-tokens/requestnetwork.ts","webpack:///./src/eth-tokens/enjincoin.ts","webpack:///./src/eth-tokens/monaco.ts","webpack:///./src/eth-tokens/edgeless.ts","webpack:///./src/eth-tokens/vechain.ts","webpack:///./src/eth-tokens/icon.ts","webpack:///./src/eth-tokens/zerox.ts","webpack:///./src/eth-tokens/bancor.ts","webpack:///./src/eth-tokens/iconomi.ts","webpack:///./src/eth-tokens/tenxpay.ts","webpack:///./src/eth-tokens/storj.ts"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","verb","v","op","f","TypeError","_","y","t","label","ops","pop","trys","length","push","g","sent","throw","return","Symbol","iterator","EthConfirmation","Web3","axios_1","hdkey_1","EthEngine","abiConfiguration","configuration","bin","maxThreads","firstBlockNumber","wsProvider","providers","WebsocketProvider","wshost","web3","defaultAccount","defaultWallet","contract","eth","Contract","contractAddress","isListening","currentProvider","connection","readyState","createAccount","password","accounts","acc","create","wallet","keystore","encrypt","login","address","add","getBalance","_this","bind","balance","utils","fromWei","sendAllEther","privateKey","toAddress","currentBalance","currentGasPrice","estimateGas","signedTx","_a","getGasPrice","from","to","amount","signTransaction","gasPrice","gas","gasLimit","data","sendSignedTransaction","rawTransaction","sendEther","weiBalance","toWei","sendTransaction","getContractCode","getCode","callFunction","params","generalParams","confirmation","abi","code","payable","ets","method","GAS_PRICE","GAS","_b","undefined","isMethodPayable","methods","RECEIPT","send","on","rec","catch","err","CONFIRMATION","confNumber","receipt","STATIC","recoverAccount","pkSeed","HDKey","default","fromMasterSeed","hdnode","derive","privKey","_privateKey","toString","privateKeyToAccount","conversion","fromWeiToEther","weiValue","stateMutability","getTransactionList","getTransactionsFromBlockCypher","scanBlockRange","startingBlock","stoppingBlock","callback","that","results","getPercentComplete","bn","Math","floor","scanTransactionCallback","txn","block","ether","message","timestamp","exitThread","numThreads","numBlocksScanned","stopTime","Date","duration","getTime","startTime","blocksPerSec","msg","len","numSpaces","process","stdout","columns","spaces","Array","join","write","gotError","scanBlockCallback","transactions","_i","asyncScanNextBlock","blockNumber","myBlockNumber","pctDone","getBlock","error","nt","getBlockNumber","getFeeFromBlockCypher","res","medium_fee_per_kb","limit","AugurTokenTestnet","ethEngine","AugurTokenMainnet","__export","seed_1","generateMnemonic","AppConfig","EthereumWallet","walletAddress","appConfiguration","EthConfiguration","hosts","getAddress","engine","slice","recover","getbalance","isWebSocketAlive","apihost","appid","appkey","require","__decorate","decorators","target","key","desc","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","k","metadata","abiutil_1","eth_engine_1","abiParams","AbiUtil","AbiType","getAbiParams","ERC20","totalSupply","balanceOf","owner","transfer","configParams","transferFrom","approve","spender","allowance","faucet","","uint256","Function","Number","_owner","String","bool","_to","_value","_from","_spender","functionData","returnType","functionName","descriptor","root","inputs","constant","outputs","type","forEach","ret","rootData","defineMetadata","propertyKey","getMetadata","__extends","extendStatics","setPrototypeOf","__proto__","b","__","constructor","bip39","Bip44Wallet","mnemonic","account","interalAddressIndex","externalAddressIndex","mnemonicToSeed","EthBip44Wallet","_super","coin","TOKENS","aragon_1","augur_1","bat_1","eos_1","gnosis_1","golem_1","salt_1","civic_1","omisego_1","district0x_1","statusnetwork_1","substratum_1","tron_1","bytom_1","dent_1","populous_1","maker_1","digixdao_1","qash_1","ethos_1","funfair_1","requestnetwork_1","enjincoin_1","monaco_1","edgeless_1","vechain_1","icon_1","zerox_1","bancor_1","iconomi_1","tenxpay_1","storj_1","TokenFactory","GetToken","token","testnet","GetTokenMain","GOLEM","GolemTokenTestnet","AUGUR","GNOSIS","GnosisTokenTestnet","BAT","BatTokenTestnet","ARAGON","AragonTokenTestnet","EOS","EosTokenTestnet","SALT","SaltTokenTestnet","CIVIC","CivicTokenTestnet","OMISEGO","OmiseGoTokenTestnet","DISTRICT0X","District0xTokenTestnet","STATUSNETWORK","StatusNetworkTokenTestnet","SUBSTRATUM","SubstratumTokenTestnet","TRON","TronTokenTestnet","BYTOM","BytomTokenTestnet","DENT","DentTokenTestnet","POPULOUS","PopulousTokenTestnet","MAKER","MakerTokenTestnet","DIGIXDAO","DigixDAOTokenTestnet","QASH","QASHTokenTestnet","ETHOS","EthosTokenTestnet","FUNFAIR","FunFairTokenTestnet","REQUESTNETWORK","RequestNetworkTokenTestnet","BANCOR","BancorTokenTestnet","ICONOMI","IconomiTokenTestnet","TENXPAY","TenXPayTokenTestnet","STORJ","StorjTokenTestnet","ENJINCOIN","EnjinCoinTokenTestnet","MONACO","MonacoTokenTestnet","EDGELESS","EdgelessTokenTestnet","VECHAIN","VeChainTokenTestnet","ICON","ICONTokenTestnet","ZEROX","ZeroXTokenTestnet","GolemTokenMainnet","GnosisTokenMainnet","BatTokenMainnet","AragonTokenMainnet","EosTokenMainnet","SaltTokenMainnet","CivicTokenMainnet","OmiseGoTokenMainnet","District0xTokenMainnet","StatusNetworkTokenMainnet","SubstratumTokenMainnet","TronTokenMainnet","BytomTokenMainnet","DentTokenMainnet","PopulousTokenMainnet","MakerTokenMainnet","DigixDAOTokenMainnet","QASHTokenMainnet","EthosTokenMainnet","FunFairTokenMainnet","RequestNetworkTokenMainnet","EnjinCoinTokenMainnet","MonacoTokenMainnet","EdgelessTokenMainnet","VeChainTokenMainnet","ICONTokenMainnet","ZeroXTokenMainnet","BancorTokenMainnet","IconomiTokenMainnet","TenXPayTokenMainnet","StorjTokenMainnet"],"mappings":"AAAAA,OAAOC,QACE,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAH,OAGA,IAAAD,GAAAK,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAN,WAUA,OANAC,GAAAE,GAAAI,KAAAR,EAAAC,QAAAD,IAAAC,QAAAE,GAGAH,EAAAO,GAAA,EAGAP,EAAAC,QAvBA,GAAAI,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAV,EAAAW,EAAAC,GACAV,EAAAW,EAAAb,EAAAW,IACAG,OAAAC,eAAAf,EAAAW,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAApB,GACA,GAAAa,GAAAb,KAAAqB,WACA,WAA2B,MAAArB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAG,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KDOM,SAAU3B,EAAQC,EAASE,GAEjC,YAEA,IAAIyB,GAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAC1E,MAAO,KAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,QAASC,GAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,QAASC,GAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,QAASF,GAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,GAAIN,GAAE,SAAUG,GAAWA,EAAQQ,EAAOL,SAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,QAAmBS,WAGlEO,EAAelB,MAAQA,KAAKkB,aAAgB,SAAUjB,EAASkB,GAG/D,QAASC,GAAK7B,GAAK,MAAO,UAAU8B,GAAK,MAAOX,IAAMnB,EAAG8B,KACzD,QAASX,GAAKY,GACV,GAAIC,EAAG,KAAM,IAAIC,WAAU,kCAC3B,MAAOC,GAAG,IACN,GAAIF,EAAI,EAAGG,IAAMC,EAAID,EAAU,EAARJ,EAAG,GAAS,SAAWA,EAAG,GAAK,QAAU,YAAcK,EAAIA,EAAEhD,KAAK+C,EAAGJ,EAAG,KAAKP,KAAM,MAAOY,EAEjH,QADID,EAAI,EAAGC,IAAGL,GAAM,EAAGK,EAAElB,QACjBa,EAAG,IACP,IAAK,GAAG,IAAK,GAAGK,EAAIL,CAAI,MACxB,KAAK,GAAc,MAAXG,GAAEG,SAAkBnB,MAAOa,EAAG,GAAIP,MAAM,EAChD,KAAK,GAAGU,EAAEG,QAASF,EAAIJ,EAAG,GAAIA,GAAM,EAAI,SACxC,KAAK,GAAGA,EAAKG,EAAEI,IAAIC,MAAOL,EAAEM,KAAKD,KAAO,SACxC,SACI,GAAMH,EAAIF,EAAEM,OAAMJ,EAAIA,EAAEK,OAAS,GAAKL,EAAEA,EAAEK,OAAS,MAAkB,IAAVV,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEG,EAAI,CAAG,UACjG,GAAc,IAAVH,EAAG,MAAcK,GAAML,EAAG,GAAKK,EAAE,IAAML,EAAG,GAAKK,EAAE,IAAM,CAAEF,EAAEG,MAAQN,EAAG,EAAI,OAC9E,GAAc,IAAVA,EAAG,IAAYG,EAAEG,MAAQD,EAAE,GAAI,CAAEF,EAAEG,MAAQD,EAAE,GAAIA,EAAIL,CAAI,OAC7D,GAAIK,GAAKF,EAAEG,MAAQD,EAAE,GAAI,CAAEF,EAAEG,MAAQD,EAAE,GAAIF,EAAEI,IAAII,KAAKX,EAAK,OACvDK,EAAE,IAAIF,EAAEI,IAAIC,MAChBL,EAAEM,KAAKD,KAAO,UAEtBR,EAAKH,EAAKxC,KAAKsB,EAASwB,GAC1B,MAAOb,GAAKU,GAAM,EAAGV,GAAIc,EAAI,EAAK,QAAUH,EAAII,EAAI,EACtD,GAAY,EAARL,EAAG,GAAQ,KAAMA,GAAG,EAAI,QAASb,MAAOa,EAAG,GAAKA,EAAG,OAAK,GAAQP,MAAM,GAvB9E,GAAsGQ,GAAGG,EAAGC,EAAGO,EAA3GT,GAAMG,MAAO,EAAGO,KAAM,WAAa,GAAW,EAAPR,EAAE,GAAQ,KAAMA,GAAE,EAAI,OAAOA,GAAE,IAAOI,QAAUF,OAC3F,OAAOK,IAAMvB,KAAMS,EAAK,GAAIgB,MAAShB,EAAK,GAAIiB,OAAUjB,EAAK,IAAwB,kBAAXkB,UAA0BJ,EAAEI,OAAOC,UAAY,WAAa,MAAOvC,QAAUkC,EAyB3JhD,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GE3GtD,IAQY+B,GARZC,EAAAnE,EAAA,GAGAoE,EAAApE,EAAA,GACAqE,EAAArE,EAAA,IAIA,SAAYkE,GACRA,IAAA,qBACAA,IAAA,+BACAA,IAAA,oBAHQA,EAAApE,EAAAoE,kBAAApE,EAAAoE,oBAMZ,IAAAI,GAAA,WAMI,QAAAA,GAAoBC,EAAyBC,EAAuBC,GAAhD/C,KAAA6C,mBAAyB7C,KAAA8C,gBAAuB9C,KAAA+C,MAH5D/C,KAAAgD,WAAa,GACbhD,KAAAiD,iBAAmB,MAGvB,IAAMC,GAAa,GAAIT,GAAKU,UAAUC,kBAAkBN,EAAcO,OACtErD,MAAKsD,KAAO,GAAIb,GAAKS,GACrBlD,KAAKsD,KAAKC,eAAiBT,EAAcU,cAErCX,IACA7C,KAAKyD,SAAW,GAAIzD,MAAKsD,KAAKI,IAAIC,SAASd,EAAkBC,EAAcc,kBAsWvF,MAlWWhB,GAAAjD,UAAAkE,YAAP,WACI,MAA2D,KAApD7D,KAAKsD,KAAKQ,gBAAgBC,WAAWC,YACY,IAApDhE,KAAKsD,KAAKQ,gBAAgBC,WAAWC,YAGtCpB,EAAAjD,UAAAsE,cAAP,SAAqBC,GACjB,GAAMC,GAAWnE,KAAKsD,KAAKI,IAAIS,SACzBC,EAAMD,EAASE,QAGrB,QACIC,OAAQF,EACRG,SAJaH,EAAII,QAAQN,GAAY3E,EAhCjC,QAwCLqD,EAAAjD,UAAA8E,MAAP,SAAaF,GAMT,MALAvE,MAAK8C,cAAcU,cAAgBe,EAASG,QAE5C1E,KAAKsD,KAAKI,IAAIS,SAASG,OAAOK,IAAIJ,GAClCvE,KAAKsD,KAAKI,IAAIH,eAAiBgB,EAASG,QAEjCH,GAGJ3B,EAAAjD,UAAAiF,WAAP,SAAkBF,GAAlB,GAAAG,GAAA7E,IACI,OAAOA,MAAKsD,KAAKI,IAAIkB,WAAWF,GAASI,KAAK9E,MAAMgB,KAAK,SAAC+D,GACtD,MAAOF,GAAKvB,KAAK0B,MAAMC,QAAQF,EAAS,YAInCnC,EAAAjD,UAAAuF,aAAb,SAA0BC,EAAYC,GFiGlC,MAAOrF,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIqF,GAAgBC,EAAiBC,EAAaC,CAClD,OAAOtE,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GEpGM,SAAM5B,KAAK4E,WAAW5E,KAAKsD,KAAKI,IAAIH,gBFqG/C,KAAK,GEpGO,MADlB8B,GAAiBI,EAAAtD,QACC,EAAMnC,KAAKsD,KAAKI,IAAIgC,cFuGhC,KAAK,GErGG,MAFdJ,GAAkBG,EAAAtD,QAEJ,EAAMnC,KAAKsD,KAAKI,IAAI6B,aAEhCI,KAAM3F,KAAKsD,KAAKI,IAAIH,eACpBqC,GAAIR,EACJS,OAAQR,IFwGJ,KAAK,GEpGA,MARXE,GAAcE,EAAAtD,QAQH,EAAMnC,KAAKsD,KAAKI,IAAIoC,iBAE7BH,KAAM3F,KAAKsD,KAAKI,IAAIH,eACpBwC,SAAUT,EACVU,IAAKT,EACLU,SAAwB,EAAdV,EACVK,GAAIR,EACJ3E,MAAO4E,EAAiBE,EAAcD,EAAkB,EACxDY,KAAM,IACPf,GFsGK,KAAK,GEnGjB,MAZMK,GAAWC,EAAAtD,QAYjB,EAAOnC,KAAKsD,KAAKI,IAAIyC,sBAAsBX,EAASY,uBAG3CxD,EAAAjD,UAAA0G,UAAb,SAAuBjB,EAAWL,GFwG9B,MAAOhF,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIsG,GAAYhB,EAAiBC,CACjC,OAAOrE,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GE1GO,MADlB0E,GAAatG,KAAKsD,KAAK0B,MAAMuB,MAAMxB,EAAS,UAC1B,EAAM/E,KAAKsD,KAAKI,IAAIgC,cF6GhC,KAAK,GE3GG,MAFdJ,GAAkBG,EAAAtD,QAEJ,EAAMnC,KAAKsD,KAAKI,IAAI6B,aAEhCI,KAAM3F,KAAKsD,KAAKI,IAAIH,eACpBqC,GAAIR,EACJS,OAAQS,IF8GJ,KAAK,GE1GV,MARDf,GAAcE,EAAAtD,QAQb,EAAMnC,KAAKsD,KAAKI,IAAI8C,iBAEnBb,KAAM3F,KAAKsD,KAAKI,IAAIH,eACpBwC,SAAUT,EACVU,IAAKT,EACLU,SAAwB,EAAdV,EACVK,GAAIR,EACJ3E,MAAO6F,IF6GH,KAAK,GEpHjB,SAAOb,EAAAtD,cAYES,EAAAjD,UAAA8G,gBAAb,SAA6B7C,GF8GzB,MAAO7D,GAAUC,SAAM,OAAQ,GAAQ,WACnC,MAAOkB,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GEhHV,SAAM5B,KAAKsD,KAAKI,IAAIgD,QAAQ9C,GFiHvB,KAAK,GEjHjB,SAAO6B,EAAAtD,cAWES,EAAAjD,UAAAgH,aAAb,SAA0B5H,EAAM6H,EAAQC,EAAeC,EAAgCC,EAAMnD,GF4GzF,MAAO7D,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIyD,GAAUuD,EAAMxD,EAAeyD,EAASC,EAAKC,EAAQC,EAAWC,EAAK5B,CACzE,OAAOvE,GAAYlB,KAAM,SAAUsH,GAC/B,OAAQA,EAAG1F,OACP,IAAK,GAMD,MErHhBkF,OAAgCS,KAAjBT,EAA6B,EAAIA,EAE5CrD,EAAW,KACXuD,EAAO,KACPxD,EAAgB,KACdyD,EAAmBjH,KAAKwH,gBAAgBzI,MAAcwI,KAARR,EAAoB/G,KAAK6C,iBAAmBkE,GAE5FA,GAAOnD,EAEHqD,GACO,EAAMjH,KAAKyG,gBAAgB7C,KADlC,MAFJ,IFiHQ,KAAK,GE9GToD,EAAOM,EAAAnF,OFgHCmF,EAAG1F,MAAQ,CACf,KAAK,GAGD,MElHZ6B,GAAW,GAAIzD,MAAKsD,KAAKI,IAAIC,SAASoD,EAAKnD,GAC3CJ,EAAgBxD,KAAK8C,cAAcU,eFiHf,EAAG,EACf,KAAK,GEhHbA,EAAgBxD,KAAK6C,iBAAiBW,cACtCwD,EAAOhH,KAAK+C,IAAIiE,KAChBvD,EAAW,GAAIzD,MAAKsD,KAAKI,IAAIC,SAAS3D,KAAK6C,iBAAkB7C,KAAK8C,cAAcc,iBFkHpE0D,EAAG1F,MAAQ,CACf,KAAK,GACD,WEhHU2F,KAAtBV,EAAcb,KAAqBiB,GACvB,EAAMjH,KAAKsD,KAAKI,IAAI6B,aAAcW,KAAMc,EAAMpB,GAAIpC,MAD9D,IFkHQ,KAAK,GEjHP0D,EAAMI,EAAAnF,OACZ0E,EAAcb,IAAMkB,EACpBL,EAAcZ,SAAiB,EAANiB,EFmHbI,EAAG1F,MAAQ,CACf,KAAK,GE/GC,MAFZuF,IAAS1B,EAAAhC,EAASgE,SAAQ1I,GAAKkC,MAAAwE,EAAImB,IAEvB,EAAM5G,KAAKsD,KAAKI,IAAIgC,cFkH1B,KAAK,GEjHL,MADN0B,GAAYE,EAAAnF,QACN,EAAMgF,EAAO5B,YAAYsB,GFoHzB,KAAK,GE/GjB,MALMQ,GAAMC,EAAAnF,OACZ0E,EAAcb,IAAMqB,EACpBR,EAAcZ,SAAiB,EAANoB,EACzBR,EAAcd,SAAWqB,GAEzB,EAAO,GAAI/G,SAAQ,SAACC,EAASC,GACzB,IACI,OAAQuG,GACJ,IAAKtE,GAAgBkF,QACjBP,EAAOQ,KAAKd,GAAee,GAAG,UAAW,SAACC,GACtCvH,EAAQuH,KACTC,MAAM,SAACC,GACNxH,EAAOwH,IAEX,MAEJ,KAAKvF,GAAgBwF,aACjBb,EAAOQ,KAAKd,GAAee,GAAG,eAAgB,SAACK,EAAYC,GACvDA,EAAQD,WAAaA,EACrB3H,EAAQ4H,KACTJ,MAAM,SAACC,GACNxH,EAAOwH,IAEX,MAEJ,KAAKvF,GAAgB2F,OACjBhB,EAAOxI,KAAKkI,EAAe,SAACkB,EAAKjH,GACzBiH,EACAxH,EAAOwH,GAEPzH,EAAQQ,MAM1B,MAAOF,GACLL,EAAOK,aAKZgC,EAAAjD,UAAAyI,eAAP,SAAsBC,GAClB,GAAMC,GAAQ,GAAI3F,GAAA4F,QAAMC,eAAeH,GACjCI,EAASH,EAAMI,OAAO,oBACtBC,EAAUF,EAAOG,YAAYC,UAInC,OAFiB7I,MAAKsD,KAAKI,IAAIS,SACV2E,oBAAoB,KAAOH,IAI7C/F,EAAAjD,UAAA4G,MAAP,SAAaV,EAAQkD,GACjB,MAAO/I,MAAKsD,KAAK0B,MAAMuB,MAAMV,EAAQkD,IAGlCnG,EAAAjD,UAAAqJ,eAAP,SAAsBC,GAElB,MADcjJ,MAAKsD,KAAK0B,MAAMC,QAAQgE,EAAU,UAI7CrG,EAAAjD,UAAA6H,gBAAP,SAAuBzI,EAAcgI,GACjC,IAAK,GAAMtI,KAAKsI,GACZ,GAAIA,EAAItI,GAAGM,OAASA,EAChB,MAAkC,eAA3BgI,EAAItI,GAAGyK,eAGtB,QAAO,GAQEtG,EAAAjD,UAAAwJ,mBAAb,SAAgCzE,GF+G5B,MAAO3E,GAAUC,SAAM,OAAQ,GAAQ,WACnC,MAAOkB,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GEjHV,SAAM5B,KAAKoJ,+BAA+B1E,GFkHrC,KAAK,GElHjB,SAAOe,EAAAtD,cAWES,EAAAjD,UAAA0J,eAAb,SAA4BC,EAAgBC,EAAgBC,GF6GxD,MAAOzJ,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GACIyJ,GAAMC,EADN7E,EAAQ7E,IAEZ,OAAOkB,GAAYlB,KAAM,SAAUyF,GE1GvC,MAFMgE,GAAOzJ,KACP0J,MACN,EAAO,GAAIrJ,SAAQ,SAAOC,EAASC,GAAM,MAAAR,GAAA8E,MAAA,qBAuBrC,QAAA8E,GAA4BC,GACxB,GAAMjI,GAAI4H,EAAgBD,EACpB/J,EAAIqK,EAAKN,CACf,OAAOO,MAAKC,MAAMvK,EAAIoC,EAAI,KAG9B,QAAAoI,GAAiCC,EAAKC,GAKlC,GAAID,EAAIpE,KAAO6D,EAAKnG,KAAKC,eAAgB,CAGrC,GAAM2G,GAAQT,EAAKnG,KAAK0B,MAAMC,QAAQ+E,EAAIvJ,MAAO,SAC3C0J,EAAU,KAAKF,EAAMG,UAAS,KAAKF,EAAK,SAASF,EAAIrE,IAC3D+D,GAAQzH,KAAKkI,OAEV,IAAIH,EAAIrE,OAAS8D,EAAKnG,KAAKC,eAAgB,CAG9C,GAAM2G,GAAQT,EAAKnG,KAAK0B,MAAMC,QAAQ+E,EAAIvJ,MAAO,SAC3C0J,EAAU,KAAKF,EAAMG,UAAS,KAAKF,EAAK,OAAOF,EAAIpE,EACzD8D,GAAQzH,KAAKkI,IAIrB,QAAAE,KACI,GAAqB,KAAfC,EAAkB,CACpB,GAAMC,GAAmB,EAAIhB,EAAgBD,EACvCkB,EAAW,GAAIC,MACfC,GAAYF,EAASG,UAAYC,EAAUD,WAAa,IACxDE,EAAehB,KAAKC,MAAMS,EAAmBG,GAE7CI,EAAM,oBAAoBvB,EAAa,KAAKgB,EAAgB,OAAOG,EAAQ,aAAaG,EAAY,gBACpGE,EAAMD,EAAI9I,OACVgJ,EAAYC,QAAQC,OAAOC,QAAUJ,EACrCK,EAASC,MAAM,EAAIL,GAAWM,KAAK,IAEzCL,SAAQC,OAAOK,MAAM,KAAOT,EAAMM,EAAS,MACvC5B,GACAA,EAASgC,EAAUjC,GAI3B,MADAjJ,GAAQoJ,GACDY,EAGX,QAAAmB,GAA2BxB,GACvB,GAAIA,EAAMyB,aACN,IAAgB,GAAAC,GAAA,EAAAlG,EAAAwE,EAAMyB,aAANC,EAAAlG,EAAAzD,OAAA2J,IAAkB,CAA7B,GAAMlN,GAACgH,EAAAkG,GACF3B,EAAMvL,CACZsL,GAAwBC,EAAKC,IAKzC,QAAA2B,KAGI,GAAIJ,EACA,MAAOnB,IAIX,IAAIwB,EAActC,EACd,MAAOc,IAKX,IAAMyB,GAAgBD,GAGtB,IAAIC,EAAgBrC,EAAKzG,YAAe,GAAK8I,IAAkBvC,EAAe,CAC1E,GAAMwC,GAAUpC,EAAmBmC,EACnCb,SAAQC,OAAOK,MAAM,oBAAoBO,EAAa,MAAMC,EAAO,MAMvEtC,EAAKnG,KAAKI,IAAIsI,SAASF,GAAe,EAAM,SAACG,EAAOhC,GAC5CgC,EAEAT,GAAW,GAGXC,EAAkBxB,GAClB2B,OFgEA,GAAIC,GAAaL,EAAUlB,EAAYM,EAAWsB,CAClD,OAAOhL,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GACD,MElLnB2H,IAAD,MACgB,EAAME,EAAKnG,KAAKI,IAAIyI,iBFmLpB,KAAK,GEnLrB5C,EAAgB9D,EAAAtD,OFqLIsD,EAAG7D,MAAQ,CACf,KAAK,GE3KzB,GARK0H,IACDA,EAAgBC,EAAgB,IAOhCD,EAAgBC,EAChB,OAAM,GAAE,EAuGZ,KApGIsC,EAAcvC,EACdkC,GAAW,EACXlB,EAAa,EACXM,EAAY,GAAIH,MAiGjByB,EAAK,EAAGA,EAAKzC,EAAKzG,YAAcsG,EAAgB4C,GAAM3C,EAAe2C,IACtE5B,IACAsB,GAGJ,UAAOM,gBAIDtJ,EAAAjD,UAAAyM,sBAAd,WFiFI,MAAOrM,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIqM,EACJ,OAAOnL,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GEpFL,SAAMc,EAAA6F,QAAMjJ,IAAI,4CFqFhB,KAAK,GEpFjB,MADM+M,GAAM5G,EAAAtD,QACZ,EAAOkK,EAAInG,KAAKpF,OAAOwL,yBAGb1J,EAAAjD,UAAAyJ,+BAAd,SAA6C1E,EAAiB6H,GF0F1D,WE1F0D,KAAAA,MAAA,MF0FnDxM,EAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIqM,EACJ,OAAOnL,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GE7FL,SAAMc,EAAA6F,QAAMjJ,IAAI,kDAAkDoF,EAAO,eAAe6H,GF8FxF,KAAK,GE7FjB,MADMF,GAAM5G,EAAAtD,QACZ,EAAOkK,EAAInG,YAEnBtD,IAlXaxE,GAAAwE,aF2dP,SAAUzE,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GGtetD,IAAA+L,GAAA,WACE,QAAAA,GAAYC,IAGd,MAAAD,KAJapO,GAAAoO,mBAMb,IAAAE,GAAA,WACE,QAAAA,GAAYD,IAGd,MAAAC,KAJatO,GAAAsO,qBHifP,SAAUvO,EAAQC,EAASE,GAEjC,YAEA,SAASqO,GAAS/N,GACd,IAAK,GAAIiB,KAAKjB,GAAQR,EAAQwB,eAAeC,KAAIzB,EAAQyB,GAAKjB,EAAEiB,IAEpEX,OAAOC,eAAef,EAAS,cAAgBqC,OAAO,IIrgBtDkM,EAAArO,EAAA,GACA,IAAAsO,GAAAtO,EAAA,GAAQF,GAAAyO,iBAAAD,EAAAC,iBACRF,EAAArO,EAAA,MJ4gBM,SAAUH,EAAQC,EAASE,GAEjC,YAEA,SAASqO,GAAS/N,GACd,IAAK,GAAIiB,KAAKjB,GAAQR,EAAQwB,eAAeC,KAAIzB,EAAQyB,GAAKjB,EAAEiB,IAEpEX,OAAOC,eAAef,EAAS,cAAgBqC,OAAO,IKrhBtDkM,EAAArO,EAAA,IACAqO,EAAArO,EAAA,IACAqO,EAAArO,EAAA,KL2hBM,SAAUH,EAAQC,EAASE,GAEjC,YAEA,IAAIyB,GAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAC1E,MAAO,KAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,QAASC,GAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,QAASC,GAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,QAASF,GAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,GAAIN,GAAE,SAAUG,GAAWA,EAAQQ,EAAOL,SAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,QAAmBS,WAGlEO,EAAelB,MAAQA,KAAKkB,aAAgB,SAAUjB,EAASkB,GAG/D,QAASC,GAAK7B,GAAK,MAAO,UAAU8B,GAAK,MAAOX,IAAMnB,EAAG8B,KACzD,QAASX,GAAKY,GACV,GAAIC,EAAG,KAAM,IAAIC,WAAU,kCAC3B,MAAOC,GAAG,IACN,GAAIF,EAAI,EAAGG,IAAMC,EAAID,EAAU,EAARJ,EAAG,GAAS,SAAWA,EAAG,GAAK,QAAU,YAAcK,EAAIA,EAAEhD,KAAK+C,EAAGJ,EAAG,KAAKP,KAAM,MAAOY,EAEjH,QADID,EAAI,EAAGC,IAAGL,GAAM,EAAGK,EAAElB,QACjBa,EAAG,IACP,IAAK,GAAG,IAAK,GAAGK,EAAIL,CAAI,MACxB,KAAK,GAAc,MAAXG,GAAEG,SAAkBnB,MAAOa,EAAG,GAAIP,MAAM,EAChD,KAAK,GAAGU,EAAEG,QAASF,EAAIJ,EAAG,GAAIA,GAAM,EAAI,SACxC,KAAK,GAAGA,EAAKG,EAAEI,IAAIC,MAAOL,EAAEM,KAAKD,KAAO,SACxC,SACI,GAAMH,EAAIF,EAAEM,OAAMJ,EAAIA,EAAEK,OAAS,GAAKL,EAAEA,EAAEK,OAAS,MAAkB,IAAVV,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEG,EAAI,CAAG,UACjG,GAAc,IAAVH,EAAG,MAAcK,GAAML,EAAG,GAAKK,EAAE,IAAML,EAAG,GAAKK,EAAE,IAAM,CAAEF,EAAEG,MAAQN,EAAG,EAAI,OAC9E,GAAc,IAAVA,EAAG,IAAYG,EAAEG,MAAQD,EAAE,GAAI,CAAEF,EAAEG,MAAQD,EAAE,GAAIA,EAAIL,CAAI,OAC7D,GAAIK,GAAKF,EAAEG,MAAQD,EAAE,GAAI,CAAEF,EAAEG,MAAQD,EAAE,GAAIF,EAAEI,IAAII,KAAKX,EAAK,OACvDK,EAAE,IAAIF,EAAEI,IAAIC,MAChBL,EAAEM,KAAKD,KAAO,UAEtBR,EAAKH,EAAKxC,KAAKsB,EAASwB,GAC1B,MAAOb,GAAKU,GAAM,EAAGV,GAAIc,EAAI,EAAK,QAAUH,EAAII,EAAI,EACtD,GAAY,EAARL,EAAG,GAAQ,KAAMA,GAAG,EAAI,QAASb,MAAOa,EAAG,GAAKA,EAAG,OAAK,GAAQP,MAAM,GAvB9E,GAAsGQ,GAAGG,EAAGC,EAAGO,EAA3GT,GAAMG,MAAO,EAAGO,KAAM,WAAa,GAAW,EAAPR,EAAE,GAAQ,KAAMA,GAAE,EAAI,OAAOA,GAAE,IAAOI,QAAUF,OAC3F,OAAOK,IAAMvB,KAAMS,EAAK,GAAIgB,MAAShB,EAAK,GAAIiB,OAAUjB,EAAK,IAAwB,kBAAXkB,UAA0BJ,EAAEI,OAAOC,UAAY,WAAa,MAAOvC,QAAUkC,EAyB3JhD,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GMlkBtD,IAAAqM,GAAAxO,EAAA,GAEAyO,EAAA,WAOE,QAAAA,KANO/M,KAAAgN,kBAAwBzF,GAO7BvH,KAAKiN,iBAAmBH,EAAUI,iBAAiBC,MAAM,GAkC7D,MA/BSJ,GAAApN,UAAAyN,WAAP,WACE,MAAO,KAAOpN,KAAKgN,eAGdD,EAAApN,UAAA8E,MAAP,SAAaF,GACX,GAAMH,GAAMpE,KAAKqN,OAAO5I,MAAMF,EAI9B,OAHIH,GAAIM,QAAQ1C,OAAS,IACvBhC,KAAKgN,cAAgB5I,EAAIM,QAAQ4I,MAAM,IAElClJ,GAGF2I,EAAApN,UAAA0E,OAAP,SAAcH,GACZ,MAAOlE,MAAKqN,OAAOpJ,cAAcC,IAG5B6I,EAAApN,UAAA4N,QAAP,SAAepI,GACb,MAAOnF,MAAKqN,OAAOjF,eAAejD,IAGvB4H,EAAApN,UAAA6N,WAAb,SAAwB9I,GNyjBlB,MAAO3E,GAAUC,SAAM,OAAQ,GAAQ,WACnC,MAAOkB,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GM3jBd,SAAM5B,KAAKqN,OAAOzI,WAAWF,GN4jBpB,KAAK,GM5jBrB,SAAOe,EAAAtD,cAGF4K,EAAApN,UAAAuF,aAAP,SAAoBC,EAAYC,GAC9B,MAAOpF,MAAKqN,OAAOnI,aAAaC,EAAYC,IAGvC2H,EAAApN,UAAA8N,iBAAP,WACE,MAAOzN,MAAKqN,OAAOxJ,eAEvBkJ,IA1Ca3O,GAAA2O,kBN8mBP,SAAU5O,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,IOtnBzCrC,EAAA8O,kBACXQ,QAAS,oCACTrK,OAAQ,4DACRsK,MAAO,+CACPC,OAAQ,+CACRT,QAEI9J,OAAQ,6BACRO,gBAAiB,6CACjBJ,cAAe,+CAGfH,OAAQ,6BACRO,gBAAiB,6CACjBJ,cAAe,iDP+nBf,SAAUrF,EAAQC,GQ7oBxBD,EAAAC,QAAAyP,QAAA,aRmpBM,SAAU1P,EAAQC,GSnpBxBD,EAAAC,QAAAyP,QAAA,UTypBM,SAAU1P,EAAQC,GUzpBxBD,EAAAC,QAAAyP,QAAA,UV+pBM,SAAU1P,EAAQC,EAASE,GAEjC,YAEA,IAAIwP,GAAc9N,MAAQA,KAAK8N,YAAe,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HpP,GAAvHD,EAAIsP,UAAUnM,OAAQoM,EAAIvP,EAAI,EAAImP,EAAkB,OAATE,EAAgBA,EAAOhP,OAAOmP,yBAAyBL,EAAQC,GAAOC,CACrH,IAAuB,gBAAZI,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIzP,GAAIsP,EAAW/L,OAAS,EAAGvD,GAAK,EAAGA,KAASK,EAAIiP,EAAWtP,MAAI2P,GAAKvP,EAAI,EAAIC,EAAEsP,GAAKvP,EAAI,EAAIC,EAAEkP,EAAQC,EAAKG,GAAKtP,EAAEkP,EAAQC,KAASG,EAChJ,OAAOvP,GAAI,GAAKuP,GAAKlP,OAAOC,eAAe6O,EAAQC,EAAKG,GAAIA,GAE5DI,EAAcxO,MAAQA,KAAKwO,YAAe,SAAUC,EAAGpN,GACvD,GAAuB,gBAAZiN,UAAoD,kBAArBA,SAAQI,SAAyB,MAAOJ,SAAQI,SAASD,EAAGpN,IAEtGtB,EAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAC1E,MAAO,KAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,QAASC,GAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,QAASC,GAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,QAASF,GAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,GAAIN,GAAE,SAAUG,GAAWA,EAAQQ,EAAOL,SAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,QAAmBS,WAGlEO,EAAelB,MAAQA,KAAKkB,aAAgB,SAAUjB,EAASkB,GAG/D,QAASC,GAAK7B,GAAK,MAAO,UAAU8B,GAAK,MAAOX,IAAMnB,EAAG8B,KACzD,QAASX,GAAKY,GACV,GAAIC,EAAG,KAAM,IAAIC,WAAU,kCAC3B,MAAOC,GAAG,IACN,GAAIF,EAAI,EAAGG,IAAMC,EAAID,EAAU,EAARJ,EAAG,GAAS,SAAWA,EAAG,GAAK,QAAU,YAAcK,EAAIA,EAAEhD,KAAK+C,EAAGJ,EAAG,KAAKP,KAAM,MAAOY,EAEjH,QADID,EAAI,EAAGC,IAAGL,GAAM,EAAGK,EAAElB,QACjBa,EAAG,IACP,IAAK,GAAG,IAAK,GAAGK,EAAIL,CAAI,MACxB,KAAK,GAAc,MAAXG,GAAEG,SAAkBnB,MAAOa,EAAG,GAAIP,MAAM,EAChD,KAAK,GAAGU,EAAEG,QAASF,EAAIJ,EAAG,GAAIA,GAAM,EAAI,SACxC,KAAK,GAAGA,EAAKG,EAAEI,IAAIC,MAAOL,EAAEM,KAAKD,KAAO,SACxC,SACI,GAAMH,EAAIF,EAAEM,OAAMJ,EAAIA,EAAEK,OAAS,GAAKL,EAAEA,EAAEK,OAAS,MAAkB,IAAVV,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEG,EAAI,CAAG,UACjG,GAAc,IAAVH,EAAG,MAAcK,GAAML,EAAG,GAAKK,EAAE,IAAML,EAAG,GAAKK,EAAE,IAAM,CAAEF,EAAEG,MAAQN,EAAG,EAAI,OAC9E,GAAc,IAAVA,EAAG,IAAYG,EAAEG,MAAQD,EAAE,GAAI,CAAEF,EAAEG,MAAQD,EAAE,GAAIA,EAAIL,CAAI,OAC7D,GAAIK,GAAKF,EAAEG,MAAQD,EAAE,GAAI,CAAEF,EAAEG,MAAQD,EAAE,GAAIF,EAAEI,IAAII,KAAKX,EAAK,OACvDK,EAAE,IAAIF,EAAEI,IAAIC,MAChBL,EAAEM,KAAKD,KAAO,UAEtBR,EAAKH,EAAKxC,KAAKsB,EAASwB,GAC1B,MAAOb,GAAKU,GAAM,EAAGV,GAAIc,EAAI,EAAK,QAAUH,EAAII,EAAI,EACtD,GAAY,EAARL,EAAG,GAAQ,KAAMA,GAAG,EAAI,QAASb,MAAOa,EAAG,GAAKA,EAAG,OAAK,GAAQP,MAAM,GAvB9E,GAAsGQ,GAAGG,EAAGC,EAAGO,EAA3GT,GAAMG,MAAO,EAAGO,KAAM,WAAa,GAAW,EAAPR,EAAE,GAAQ,KAAMA,GAAE,EAAI,OAAOA,GAAE,IAAOI,QAAUF,OAC3F,OAAOK,IAAMvB,KAAMS,EAAK,GAAIgB,MAAShB,EAAK,GAAIiB,OAAUjB,EAAK,IAAwB,kBAAXkB,UAA0BJ,EAAEI,OAAOC,UAAY,WAAa,MAAOvC,QAAUkC,EAyB3JhD,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GW9sBtD,IAAAkO,GAAArQ,EAAA,IACAsQ,EAAAtQ,EAAA,GACOuQ,EAAYF,EAAAG,QAAQD,UACpBE,EAAUJ,EAAAG,QAAQC,QAClBC,EAAeL,EAAAG,QAAQE,aAE9BC,EAAA,WAKE,QAAAA,GAAmBrL,EAAyB6I,GAC1CzM,KAAK4D,gBAAkBA,EACvB5D,KAAKyM,UAAYA,EAsFrB,MAlFSwC,GAAAtP,UAAAuP,YAAP,WACE,MAAO,IAIID,EAAAtP,UAAAwP,UAAb,SAAuBC,GXusBjB,MAAOrP,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI+G,GAAKF,EAAe/F,CACxB,OAAOI,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GWnsBD,MANdmF,GAAMiI,EAAahP,KAAM,aAEzB6G,GACJlB,KAAM3F,KAAKyM,UAAU3J,cAAcU,gBAGjB,EAAMxD,KAAKyM,UAAU9F,aAAa,aAAcyI,GAAQvI,EAAe+H,EAAApM,gBAAgB2F,OAAQpB,EAAK/G,KAAK4D,iBXysB7G,KAAK,GWxsBrB,MADM9C,GAAc2E,EAAAtD,QACpB,EAAOnC,KAAKyM,UAAUzD,eAAelI,UAK1BmO,EAAAtP,UAAA0P,SAAb,SAAsBzJ,EAAYnF,GX2sB5B,MAAOV,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI+G,GAAKuI,EAAcxO,CACvB,OAAOI,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GWxsBD,MANdmF,GAAMiI,EAAahP,KAAM,YAEzBsP,GACJ3J,KAAM3F,KAAKyM,UAAU3J,cAAcU,gBAGjB,EAAMxD,KAAKyM,UAAU9F,aAAa,YAAaf,EAAInF,GAAQ6O,EAAcV,EAAApM,gBAAgBwF,aAAcjB,EAAK/G,KAAK4D,iBX8sBrH,KAAK,GW7sBrB,MADM9C,GAAc2E,EAAAtD,QACpB,EAAOrB,SAKImO,EAAAtP,UAAA4P,aAAb,SAA0B5J,EAAcC,EAAYnF,GXgtB9C,MAAOV,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI+G,GAAKuI,EAAcxO,CACvB,OAAOI,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GW7sBD,MANdmF,GAAMiI,EAAahP,KAAM,gBAEzBsP,GACJ3J,KAAM3F,KAAKyM,UAAU3J,cAAcU,gBAGjB,EAAMxD,KAAKyM,UAAU9F,aAAa,gBAAiBhB,EAAMC,EAAInF,GAAQ6O,EAAcV,EAAApM,gBAAgBwF,aAAcjB,EAAK/G,KAAK4D,iBXmtB/H,KAAK,GWltBrB,MADM9C,GAAc2E,EAAAtD,QACpB,EAAOrB,SAIImO,EAAAtP,UAAA6P,QAAb,SAAqBC,EAAiBhP,GXstBhC,MAAOV,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI+G,GAAKuI,EAAcxO,CACvB,OAAOI,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GWntBD,MANdmF,GAAMiI,EAAahP,KAAM,WAEzBsP,GACJ3J,KAAM3F,KAAKyM,UAAU3J,cAAcU,gBAGjB,EAAMxD,KAAKyM,UAAU9F,aAAa,WAAY8I,EAAShP,GAAQ6O,EAAcV,EAAApM,gBAAgBwF,aAAcjB,EAAK/G,KAAK4D,iBXytBzH,KAAK,GWxtBrB,MADM9C,GAAc2E,EAAAtD,QACpB,EAAOrB,SAIImO,EAAAtP,UAAA+P,UAAb,SAAuBN,EAAeK,GX4tBhC,MAAO1P,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI+G,GAAKuI,EAAcxO,CACvB,OAAOI,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GWztBD,MANdmF,GAAMiI,EAAahP,KAAM,aAEzBsP,GACJ3J,KAAM3F,KAAKyM,UAAU3J,cAAcU,gBAGjB,EAAMxD,KAAKyM,UAAU9F,aAAa,aAAcyI,EAAOK,GAAUH,EAAcV,EAAApM,gBAAgB2F,OAAQpB,EAAK/G,KAAK4D,iBX+tBrH,KAAK,GW9tBrB,MADM9C,GAAc2E,EAAAtD,QACpB,EAAOrB,SAIImO,EAAAtP,UAAAgQ,OAAb,WXkuBM,MAAO5P,GAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI+G,GAAKuI,EAAcxO,CACvB,OAAOI,GAAYlB,KAAM,SAAUyF,GAC/B,OAAQA,EAAG7D,OACP,IAAK,GW/tBD,MANdmF,GAAMiI,EAAahP,KAAM,UAEzBsP,GACJ3J,KAAM3F,KAAKyM,UAAU3J,cAAcU,gBAGjB,EAAMxD,KAAKyM,UAAU9F,aAAa,YAAc2I,EAAcV,EAAApM,gBAAgBwF,aAAcjB,EAAK/G,KAAK4D,iBXquB1G,KAAK,GWpuBrB,MADM9C,GAAc2E,EAAAtD,QACpB,EAAOrB,SA5ETgN,GADCe,MAAee,GAAIb,EAAQc,UX0zBtBrB,EAAW,cAAesB,UAC1BtB,EAAW,wBACXA,EAAW,oBAAqBuB,SACjCd,EAAMtP,UAAW,cAAe,MWvzBrCmO,GADCe,MAAe9J,QAAWgK,EAAQc,UAAWG,OAAUjB,EAAQrK,UX2zB1D8J,EAAW,cAAesB,UAC1BtB,EAAW,qBAAsByB,SACjCzB,EAAW,oBAAqBnO,UACjC4O,EAAMtP,UAAW,YAAa,MW/yBnCmO,GADCe,GAAW3F,gBAAiB,YAAa0G,GAAIb,EAAQmB,OAAQC,IAAOpB,EAAQrK,UAAW0L,OAAUrB,EAAQc,UXmzBpGrB,EAAW,cAAesB,UAC1BtB,EAAW,qBAAsByB,OAAQF,SACzCvB,EAAW,oBAAqBnO,UACjC4O,EAAMtP,UAAW,WAAY,MWxyBlCmO,GAFCe,GAAW3F,gBAAiB,YAAa0G,GAAIb,EAAQmB,OACnDG,MAAStB,EAAQc,UAAWM,IAAOpB,EAAQrK,UAAW0L,OAAUrB,EAAQc,UX4yBrErB,EAAW,cAAesB,UAC1BtB,EAAW,qBAAsByB,OAAQA,OAAQF,SACjDvB,EAAW,oBAAqBnO,UACjC4O,EAAMtP,UAAW,eAAgB,MWlyBtCmO,GADCe,GAAW3F,gBAAiB,YAAa0G,GAAIb,EAAQmB,OAAQI,SAAYvB,EAAQrK,UAAW0L,OAAUrB,EAAQc,UXsyBzGrB,EAAW,cAAesB,UAC1BtB,EAAW,qBAAsByB,OAAQF,SACzCvB,EAAW,oBAAqBnO,UACjC4O,EAAMtP,UAAW,UAAW,MW5xBjCmO,GADCe,MAAee,GAAIb,EAAQc,UAAWG,OAAUjB,EAAQrK,UAAW4L,SAAYvB,EAAQrK,UXgyBlF8J,EAAW,cAAesB,UAC1BtB,EAAW,qBAAsByB,OAAQA,SACzCzB,EAAW,oBAAqBnO,UACjC4O,EAAMtP,UAAW,YAAa,MWtxBnCmO,GADCe,GAAW3F,gBAAiB,kBX0xBvBsF,EAAW,cAAesB,UAC1BtB,EAAW,wBACXA,EAAW,oBAAqBnO,UACjC4O,EAAMtP,UAAW,SAAU,MW9wBlCsP,IA7Fa7Q,GAAA6Q,SXm3BP,SAAU9Q,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,KY33BtD,SAAcqO,GAEZ,GAAYC,IAAZ,SAAYA,GACVA,IAAA,eACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,eACAA,IAAA,qBACAA,IAAA,sBANUA,EAAAD,EAAAC,UAAAD,EAAAC,aAiBCD,EAAAD,UAAY,SAAC0B,EAAmBC,GZs3BvC,IYt3BwD,GAAA5J,MAAA+E,EAAA,EAAAA,EAAAwC,UAAAnM,OAAA2J,IAAA/E,EAAA+E,EAAA,GAAAwC,UAAAxC,EAC5D,OAAO,UAACqC,EAAayC,EAAsBC,GACzC,GAAIC,KACJA,GAAKC,UACLD,EAAKE,aAAqCtJ,KAA1BgJ,EAAaM,UAAiCN,EAAaM,SAC3EF,EAAKG,WACLH,EAAK5R,KAAO0R,EACZE,EAAKI,SAA6BxJ,KAAtBgJ,EAAaQ,KAAqB,WAAaR,EAAaQ,KACxEJ,EAAK1J,YAAoCM,KAAzBgJ,EAAatJ,SAAgCsJ,EAAatJ,QAC1E0J,EAAKzH,oBAAmD3B,KAAjCgJ,EAAarH,gBAAiC,aAAeqH,EAAarH,gBAC7FtC,GACFA,EAAOoK,QAAQ,SAAC3P,GACd,IAAK,GAAI4P,KAAO5P,GACVA,EAAEzB,eAAeqR,IACnBN,EAAKC,OAAO3O,MAAMlD,KAAQkS,EAAKF,KAAQhC,EAAQ1N,EAAE4P,OAMzD,KAAK,GAAIA,KAAOT,GACVA,EAAW5Q,eAAeqR,IAC5BN,EAAKG,QAAQ7O,MAAMlD,KAAQkS,EAAKF,KAAQhC,EAAQyB,EAAWS,KAI/D,IAAIC,KACJA,GAASjP,KAAK0O,GAEdrC,QAAQ6C,eAAe,YAAaD,EAAUlD,EAAQyC,KAI5C3B,EAAAE,aAAe,SAAChB,EAAaoD,GACvC,MAAO9C,SAAQ+C,YAAY,YAAarD,EAAQoD,KArDxChT,EAAA0Q,UAAA1Q,EAAA0Q,cZg7BR,SAAU3Q,EAAQC,EAASE,GAEjC,YAEA,IAAIgT,GAAatR,MAAQA,KAAKsR,WAAc,WACxC,GAAIC,GAAgBrS,OAAOsS,iBACpBC,uBAA2BpG,QAAS,SAAUvM,EAAG4S,GAAK5S,EAAE2S,UAAYC,IACvE,SAAU5S,EAAG4S,GAAK,IAAK,GAAI7R,KAAK6R,GAAOA,EAAE9R,eAAeC,KAAIf,EAAEe,GAAK6R,EAAE7R,IACzE,OAAO,UAAUf,EAAG4S,GAEhB,QAASC,KAAO3R,KAAK4R,YAAc9S,EADnCyS,EAAczS,EAAG4S,GAEjB5S,EAAEa,UAAkB,OAAN+R,EAAaxS,OAAOmF,OAAOqN,IAAMC,EAAGhS,UAAY+R,EAAE/R,UAAW,GAAIgS,OAGvFzS,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,Gaj8BtD,IAAAoR,GAAAvT,EAAA,GAEaF,GAAAyO,iBAAmB,WAC9B,MAAOgF,GAAMhF,mBAEf,IAGAiF,GAAA,WAOE,QAAAA,GAAYC,GAJJ/R,KAAAgS,QAAU,EACVhS,KAAAiS,oBAAsB,EACtBjS,KAAAkS,qBAAuB,EAGxBH,IACHA,EAAW3T,EAAAyO,mBAEAgF,GAAMM,eAAeJ,GAEtC,MAAAD,KAbsB1T,GAAA0T,aAetB,IAAAM,GAAA,SAAAC,GAAA,QAAAD,KAAA,GAAAvN,GAAA,OAAAwN,KAAApR,MAAAjB,KAAAmO,YAAAnO,Ibm8BQ,Oal8BI6E,GAAAyN,KAAO,Gbk8BJzN,Eah8Bf,MAHoCyM,GAAAc,EAAAC,GAGpCD,GAHoCN,EAAvB1T,GAAAgU,kBb48BP,SAAUjU,EAAQC,Gcn+BxBD,EAAAC,QAAAyP,QAAA,Udy+BM,SAAU1P,EAAQC,EAASE,GAEjC,YAEA,SAASqO,GAAS/N,GACd,IAAK,GAAIiB,KAAKjB,GAAQR,EAAQwB,eAAeC,KAAIzB,EAAQyB,GAAKjB,EAAEiB,IAEpEX,OAAOC,eAAef,EAAS,cAAgBqC,OAAO,Ieh/BtDkM,EAAArO,EAAA,KACAqO,EAAArO,EAAA,Kfs/BM,SAAUH,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GgB1/BtD,IAiCY8R,GAjCZC,EAAAlU,EAAA,IACAmU,EAAAnU,EAAA,GACAoU,EAAApU,EAAA,IACAqU,EAAArU,EAAA,IACAsU,EAAAtU,EAAA,IACAuU,EAAAvU,EAAA,IACAwU,EAAAxU,EAAA,IACAyU,EAAAzU,EAAA,IACA0U,EAAA1U,EAAA,IACA2U,EAAA3U,EAAA,IACA4U,EAAA5U,EAAA,IACA6U,EAAA7U,EAAA,IACA8U,EAAA9U,EAAA,IACA+U,EAAA/U,EAAA,IACAgV,EAAAhV,EAAA,IACAiV,EAAAjV,EAAA,IACAkV,EAAAlV,EAAA,IACAmV,EAAAnV,EAAA,IACAoV,EAAApV,EAAA,IACAqV,EAAArV,EAAA,IACAsV,EAAAtV,EAAA,IACAuV,EAAAvV,EAAA,IACAwV,EAAAxV,EAAA,IACAyV,EAAAzV,EAAA,IACA0V,EAAA1V,EAAA,IACA2V,EAAA3V,EAAA,IACA4V,EAAA5V,EAAA,IACA6V,EAAA7V,EAAA,IACA8V,EAAA9V,EAAA,IACA+V,EAAA/V,EAAA,IACAgW,EAAAhW,EAAA,IACAiW,EAAAjW,EAAA,KAEA,SAAYiU,GACVA,IAAA,iBACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,aACAA,IAAA,mBACAA,IAAA,aACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,qBACAA,IAAA,4BACAA,IAAA,kCACAA,IAAA,4BACAA,IAAA,gBACAA,IAAA,kBACAA,IAAA,gBACAA,IAAA,wBACAA,IAAA,kBACAA,IAAA,wBACAA,IAAA,gBACAA,IAAA,kBACAA,IAAA,sBACAA,IAAA,oCACAA,IAAA,oBACAA,IAAA,sBACAA,IAAA,sBACAA,IAAA,kBACAA,IAAA,0BACAA,IAAA,oBACAA,IAAA,wBACAA,IAAA,sBACAA,IAAA,gBACAA,IAAA,mBAhCUA,EAAAnU,EAAAmU,SAAAnU,EAAAmU,WAmCZ,IAAAiC,GAAA,mBAAAA,MA8MA,MA7MgBA,GAAAC,SAAd,SAAuBC,EAAerH,EAAmBsH,GACvD,OADuD,KAAAA,OAAA,IAClDA,EACH,MAAO3U,MAAK4U,aAAaF,EAAOrH,EAGlC,QAAQqH,GACN,IAAKnC,GAAOsC,MACV,MAAO,IAAIhC,GAAAiC,kBAAkBzH,EAE/B,KAAKkF,GAAOwC,MACV,MAAO,IAAItC,GAAAjG,kBAAkBa,EAE/B,KAAKkF,GAAOyC,OACV,MAAO,IAAIpC,GAAAqC,mBAAmB5H,EAEhC,KAAKkF,GAAO2C,IACV,MAAO,IAAIxC,GAAAyC,gBAAgB9H,EAE7B,KAAKkF,GAAO6C,OACV,MAAO,IAAI5C,GAAA6C,mBAAmBhI,EAEhC,KAAKkF,GAAO+C,IACV,MAAO,IAAI3C,GAAA4C,gBAAgBlI,EAE7B,KAAKkF,GAAOiD,KACV,MAAO,IAAI1C,GAAA2C,iBAAiBpI,EAE9B,KAAKkF,GAAOmD,MACV,MAAO,IAAI3C,GAAA4C,kBAAkBtI,EAE/B,KAAKkF,GAAOqD,QACV,MAAO,IAAI5C,GAAA6C,oBAAoBxI,EAEjC,KAAKkF,GAAOuD,WACV,MAAO,IAAI7C,GAAA8C,uBAAuB1I,EAEpC,KAAKkF,GAAOyD,cACV,MAAO,IAAI9C,GAAA+C,0BAA0B5I,EAEvC,KAAKkF,GAAO2D,WACV,MAAO,IAAI/C,GAAAgD,uBAAuB9I,EAEpC,KAAKkF,GAAO6D,KACV,MAAO,IAAIhD,GAAAiD,iBAAiBhJ,EAE9B,KAAKkF,GAAO+D,MACV,MAAO,IAAIjD,GAAAkD,kBAAkBlJ,EAE/B,KAAKkF,GAAOiE,KACV,MAAO,IAAIlD,GAAAmD,iBAAiBpJ,EAE9B,KAAKkF,GAAOmE,SACV,MAAO,IAAInD,GAAAoD,qBAAqBtJ,EAElC,KAAKkF,GAAOqE,MACV,MAAO,IAAIpD,GAAAqD,kBAAkBxJ,EAE/B,KAAKkF,GAAOuE,SACV,MAAO,IAAIrD,GAAAsD,qBAAqB1J,EAElC,KAAKkF,GAAOyE,KACV,MAAO,IAAItD,GAAAuD,iBAAiB5J,EAE9B,KAAKkF,GAAO2E,MACV,MAAO,IAAIvD,GAAAwD,kBAAkB9J,EAE/B,KAAKkF,GAAO6E,QACV,MAAO,IAAIxD,GAAAyD,oBAAoBhK,EAEjC,KAAKkF,GAAO+E,eACV,MAAO,IAAIzD,GAAA0D,2BAA2BlK,EAExC,KAAKkF,GAAOiF,OACV,MAAO,IAAIpD,GAAAqD,mBAAmBpK,EAEhC,KAAKkF,GAAOmF,QACV,MAAO,IAAIrD,GAAAsD,oBAAoBtK,EAEjC,KAAKkF,GAAOqF,QACV,MAAO,IAAItD,GAAAuD,oBAAoBxK,EAEjC,KAAKkF,GAAOuF,MACV,MAAO,IAAIvD,GAAAwD,kBAAkB1K,EAE/B,KAAKkF,GAAOyF,UACV,MAAO,IAAIlE,GAAAmE,sBAAsB5K,EAEnC,KAAKkF,GAAO2F,OACV,MAAO,IAAInE,GAAAoE,mBAAmB9K,EAEhC,KAAKkF,GAAO6F,SACV,MAAO,IAAIpE,GAAAqE,qBAAqBhL,EAElC,KAAKkF,GAAO+F,QACV,MAAO,IAAIrE,GAAAsE,oBAAoBlL,EAEjC,KAAKkF,GAAOiG,KACV,MAAO,IAAItE,GAAAuE,iBAAiBpL,EAE9B,KAAKkF,GAAOmG,MACV,MAAO,IAAIvE,GAAAwE,kBAAkBtL,KAKrBmH,EAAAI,aAAd,SAA2BF,EAAerH,GACxC,OAAQqH,GACN,IAAKnC,GAAOsC,MACV,MAAO,IAAIhC,GAAA+F,kBAAkBvL,EAE/B,KAAKkF,GAAOwC,MACV,MAAO,IAAItC,GAAA/F,kBAAkBW,EAE/B,KAAKkF,GAAOyC,OACV,MAAO,IAAIpC,GAAAiG,mBAAmBxL,EAEhC,KAAKkF,GAAO2C,IACV,MAAO,IAAIxC,GAAAoG,gBAAgBzL,EAE7B,KAAKkF,GAAO6C,OACV,MAAO,IAAI5C,GAAAuG,mBAAmB1L,EAEhC,KAAKkF,GAAO+C,IACV,MAAO,IAAI3C,GAAAqG,gBAAgB3L,EAE7B,KAAKkF,GAAOiD,KACV,MAAO,IAAI1C,GAAAmG,iBAAiB5L,EAE9B,KAAKkF,GAAOmD,MACV,MAAO,IAAI3C,GAAAmG,kBAAkB7L,EAE/B,KAAKkF,GAAOqD,QACV,MAAO,IAAI5C,GAAAmG,oBAAoB9L,EAEjC,KAAKkF,GAAOuD,WACV,MAAO,IAAI7C,GAAAmG,uBAAuB/L,EAEpC,KAAKkF,GAAOyD,cACV,MAAO,IAAI9C,GAAAmG,0BAA0BhM,EAEvC,KAAKkF,GAAO2D,WACV,MAAO,IAAI/C,GAAAmG,uBAAuBjM,EAEpC,KAAKkF,GAAO6D,KACV,MAAO,IAAIhD,GAAAmG,iBAAiBlM,EAE9B,KAAKkF,GAAO+D,MACV,MAAO,IAAIjD,GAAAmG,kBAAkBnM,EAE/B,KAAKkF,GAAOiE,KACV,MAAO,IAAIlD,GAAAmD,iBAAiBpJ,EAE9B,KAAKkF,GAAOmE,SACV,MAAO,IAAInD,GAAAoD,qBAAqBtJ,EAElC,KAAKkF,GAAOqE,MACV,MAAO,IAAIpD,GAAAqD,kBAAkBxJ,EAE/B,KAAKkF,GAAOuE,SACV,MAAO,IAAIrD,GAAAsD,qBAAqB1J,EAElC,KAAKkF,GAAOyE,KACV,MAAO,IAAItD,GAAAuD,iBAAiB5J,EAE9B,KAAKkF,GAAO2E,MACV,MAAO,IAAIvD,GAAAwD,kBAAkB9J,EAE/B,KAAKkF,GAAO6E,QACV,MAAO,IAAIxD,GAAAyD,oBAAoBhK,EAEjC,KAAKkF,GAAO+E,eACV,MAAO,IAAIzD,GAAA0D,2BAA2BlK,EAExC,KAAKkF,GAAOiF,OACV,MAAO,IAAIpD,GAAAqD,mBAAmBpK,EAEhC,KAAKkF,GAAOmF,QACV,MAAO,IAAIrD,GAAAsD,oBAAoBtK,EAEjC,KAAKkF,GAAOqF,QACV,MAAO,IAAItD,GAAAuD,oBAAoBxK,EAEjC,KAAKkF,GAAOuF,MACV,MAAO,IAAIvD,GAAAwD,kBAAkB1K,EAE/B,KAAKkF,GAAOyF,UACV,MAAO,IAAIlE,GAAAmE,sBAAsB5K,EAEnC,KAAKkF,GAAO2F,OACV,MAAO,IAAInE,GAAAoE,mBAAmB9K,EAEhC,KAAKkF,GAAO6F,SACV,MAAO,IAAIpE,GAAAqE,qBAAqBhL,EAElC,KAAKkF,GAAO+F,QACV,MAAO,IAAIrE,GAAAsE,oBAAoBlL,EAEjC,KAAKkF,GAAOiG,KACV,MAAO,IAAItE,GAAAuE,iBAAiBpL,EAE9B,KAAKkF,GAAOmG,MACV,MAAO,IAAIvE,GAAAwE,kBAAkBtL,KAIrCmH,IA9MapW,GAAAoW,gBhBgtCP,SAAUrW,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GiBlxCtD,IAAA4U,GAAA,WACE,QAAAA,GAAY5I,IAGd,MAAA4I,KAJajX,GAAAiX,oBAMb,IAAA0D,GAAA,WACE,QAAAA,GAAYtM,IAGd,MAAAsM,KAJa3a,GAAA2a,sBjB6xCP,SAAU5a,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GkBvyCtD,IAAA0U,GAAA,WACE,QAAAA,GAAY1I,IAGd,MAAA0I,KAJa/W,GAAA+W,iBAMb,IAAA2D,GAAA,WACE,QAAAA,GAAYrM,IAGd,MAAAqM,KAJa1a,GAAA0a,mBlBkzCP,SAAU3a,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GmB5zCtD,IAAA8U,GAAA,WACE,QAAAA,GAAY9I,IAGd,MAAA8I,KAJanX,GAAAmX,iBAMb,IAAAyD,GAAA,WACE,QAAAA,GAAYvM,IAGd,MAAAuM,KAJa5a,GAAA4a,mBnBu0CP,SAAU7a,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GoBj1CtD,IAAAwU,GAAA,WACE,QAAAA,GAAYxI,IAGd,MAAAwI,KAJa7W,GAAA6W,oBAMb,IAAA4D,GAAA,WACE,QAAAA,GAAYpM,IAGd,MAAAoM,KAJaza,GAAAya,sBpB41CP,SAAU1a,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GqBt2CtD,IAAAqU,GAAA,WACE,QAAAA,GAAYrI,IAGd,MAAAqI,KAJa1W,GAAA0W,mBAMb,IAAA8D,GAAA,WACE,QAAAA,GAAYnM,IAGd,MAAAmM,KAJaxa,GAAAwa,qBrBi3CP,SAAUza,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GsB33CtD,IAAAgV,GAAA,WACE,QAAAA,GAAYhJ,IAGd,MAAAgJ,KAJarX,GAAAqX,kBAMb,IAAAwD,GAAA,WACE,QAAAA,GAAYxM,IAGd,MAAAwM,KAJa7a,GAAA6a,oBtBs4CP,SAAU9a,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GuBh5CtD,IAAAkV,GAAA,WACE,QAAAA,GAAYlJ,IAGd,MAAAkJ,KAJavX,GAAAuX,mBAMb,IAAAuD,GAAA,WACE,QAAAA,GAAYzM,IAGd,MAAAyM,KAJa9a,GAAA8a,qBvB25CP,SAAU/a,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GwBr6CtD,IAAAoV,GAAA,WACE,QAAAA,GAAYpJ,IAGd,MAAAoJ,KAJazX,GAAAyX,qBAMb,IAAAsD,GAAA,WACE,QAAAA,GAAY1M,IAGd,MAAA0M,KAJa/a,GAAA+a,uBxBg7CP,SAAUhb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GyB17CtD,IAAAsV,GAAA,WACE,QAAAA,GAAYtJ,IAGd,MAAAsJ,KAJa3X,GAAA2X,wBAMb,IAAAqD,GAAA,WACE,QAAAA,GAAY3M,IAGd,MAAA2M,KAJahb,GAAAgb,0BzBq8CP,SAAUjb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G0B/8CtD,IAAAwV,GAAA,WACE,QAAAA,GAAYxJ,IAGd,MAAAwJ,KAJa7X,GAAA6X,2BAMb,IAAAoD,GAAA,WACE,QAAAA,GAAY5M,IAGd,MAAA4M,KAJajb,GAAAib,6B1B09CP,SAAUlb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G2Bp+CtD,IAAA0V,GAAA,WACE,QAAAA,GAAY1J,IAGd,MAAA0J,KAJa/X,GAAA+X,wBAMb,IAAAmD,GAAA,WACE,QAAAA,GAAY7M,IAGd,MAAA6M,KAJalb,GAAAkb,0B3B++CP,SAAUnb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G4Bz/CtD,IAAA4V,GAAA,WACE,QAAAA,GAAY5J,IAGd,MAAA4J,KAJajY,GAAAiY,kBAMb,IAAAkD,GAAA,WACE,QAAAA,GAAY9M,IAGd,MAAA8M,KAJanb,GAAAmb,oB5BogDP,SAAUpb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G6B9gDtD,IAAA8V,GAAA,WACE,QAAAA,GAAY9J,IAGd,MAAA8J,KAJanY,GAAAmY,mBAMb,IAAAiD,GAAA,WACE,QAAAA,GAAY/M,IAGd,MAAA+M,KAJapb,GAAAob,qB7ByhDP,SAAUrb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G8BniDtD,IAAAgW,GAAA,WACE,QAAAA,GAAYhK,IAGd,MAAAgK,KAJarY,GAAAqY,kBAMb,IAAAgD,GAAA,WACE,QAAAA,GAAYhN,IAGd,MAAAgN,KAJarb,GAAAqb,oB9B8iDP,SAAUtb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G+BxjDtD,IAAAkW,GAAA,WACI,QAAAA,GAAYlK,IAGhB,MAAAkK,KAJavY,GAAAuY,sBAMb,IAAA+C,GAAA,WACI,QAAAA,GAAYjN,IAGhB,MAAAiN,KAJatb,GAAAsb,wB/BmkDP,SAAUvb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GgC7kDtD,IAAAoW,GAAA,WACI,QAAAA,GAAYpK,IAGhB,MAAAoK,KAJazY,GAAAyY,mBAMb,IAAA8C,GAAA,WACI,QAAAA,GAAYlN,IAGhB,MAAAkN,KAJavb,GAAAub,qBhCwlDP,SAAUxb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GiClmDtD,IAAAsW,GAAA,WACI,QAAAA,GAAYtK,IAGhB,MAAAsK,KAJa3Y,GAAA2Y,sBAMb,IAAA6C,GAAA,WACI,QAAAA,GAAYnN,IAGhB,MAAAmN,KAJaxb,GAAAwb,wBjC6mDP,SAAUzb,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GkCvnDtD,IAAAwW,GAAA,WACI,QAAAA,GAAYxK,IAGhB,MAAAwK,KAJa7Y,GAAA6Y,kBAMb,IAAA4C,GAAA,WACI,QAAAA,GAAYpN,IAGhB,MAAAoN,KAJazb,GAAAyb,oBlCkoDP,SAAU1b,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GmC5oDtD,IAAA0W,GAAA,WACI,QAAAA,GAAY1K,IAGhB,MAAA0K,KAJa/Y,GAAA+Y,mBAMb,IAAA2C,GAAA,WACI,QAAAA,GAAYrN,IAGhB,MAAAqN,KAJa1b,GAAA0b,qBnCupDP,SAAU3b,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GoCjqDtD,IAAA4W,GAAA,WACI,QAAAA,GAAY5K,IAGhB,MAAA4K,KAJajZ,GAAAiZ,qBAMb,IAAA0C,GAAA,WACI,QAAAA,GAAYtN,IAGhB,MAAAsN,KAJa3b,GAAA2b,uBpC4qDP,SAAU5b,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GqCtrDtD,IAAA8W,GAAA,WACI,QAAAA,GAAY9K,IAGhB,MAAA8K,KAJanZ,GAAAmZ,4BAMb,IAAAyC,GAAA,WACI,QAAAA,GAAYvN,IAGhB,MAAAuN,KAJa5b,GAAA4b,8BrCisDP,SAAU7b,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GsC3sDtD,IAAAwX,GAAA,WACI,QAAAA,GAAYxL,IAGhB,MAAAwL,KAJa7Z,GAAA6Z,uBAMb,IAAAgC,GAAA,WACI,QAAAA,GAAYxN,IAGhB,MAAAwN,KAJa7b,GAAA6b,yBtCstDP,SAAU9b,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GuChuDtD,IAAA0X,GAAA,WACI,QAAAA,GAAY1L,IAGhB,MAAA0L,KAJa/Z,GAAA+Z,oBAMb,IAAA+B,GAAA,WACI,QAAAA,GAAYzN,IAGhB,MAAAyN,KAJa9b,GAAA8b,sBvC2uDP,SAAU/b,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GwCrvDtD,IAAA4X,GAAA,WACI,QAAAA,GAAY5L,IAGhB,MAAA4L,KAJaja,GAAAia,sBAMb,IAAA8B,GAAA,WACI,QAAAA,GAAY1N,IAGhB,MAAA0N,KAJa/b,GAAA+b,wBxCgwDP,SAAUhc,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,GyC1wDtD,IAAA8X,GAAA,WACI,QAAAA,GAAY9L,IAGhB,MAAA8L,KAJana,GAAAma,qBAMb,IAAA6B,GAAA,WACI,QAAAA,GAAY3N,IAGhB,MAAA2N,KAJahc,GAAAgc,uBzCqxDP,SAAUjc,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G0C/xDtD,IAAAgY,GAAA,WACI,QAAAA,GAAYhM,IAGhB,MAAAgM,KAJara,GAAAqa,kBAMb,IAAA4B,GAAA,WACI,QAAAA,GAAY5N,IAGhB,MAAA4N,KAJajc,GAAAic,oB1C0yDP,SAAUlc,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G2CpzDtD,IAAAkY,GAAA,WACI,QAAAA,GAAYlM,IAGhB,MAAAkM,KAJava,GAAAua,mBAMb,IAAA2B,GAAA,WACI,QAAAA,GAAY7N,IAGhB,MAAA6N,KAJalc,GAAAkc,qB3C+zDP,SAAUnc,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G4Cz0DtD,IAAAgX,GAAA,WACI,QAAAA,GAAYhL,IAGhB,MAAAgL,KAJarZ,GAAAqZ,oBAMb,IAAA8C,GAAA,WACI,QAAAA,GAAY9N,IAGhB,MAAA8N,KAJanc,GAAAmc,sB5Co1DP,SAAUpc,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G6C91DtD,IAAAkX,GAAA,WACI,QAAAA,GAAYlL,IAGhB,MAAAkL,KAJavZ,GAAAuZ,qBAMb,IAAA6C,GAAA,WACI,QAAAA,GAAY/N,IAGhB,MAAA+N,KAJapc,GAAAoc,uB7Cy2DP,SAAUrc,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G8Cn3DtD,IAAAoX,GAAA,WACI,QAAAA,GAAYpL,IAGhB,MAAAoL,KAJazZ,GAAAyZ,qBAMb,IAAA4C,GAAA,WACI,QAAAA,GAAYhO,IAGhB,MAAAgO,KAJarc,GAAAqc,uB9C83DP,SAAUtc,EAAQC,EAASE,GAEjC,YAEAY,QAAOC,eAAef,EAAS,cAAgBqC,OAAO,G+Cx4DtD,IAAAsX,GAAA,WACI,QAAAA,GAAYtL,IAGhB,MAAAsL,KAJa3Z,GAAA2Z,mBAMb,IAAA2C,GAAA,WACI,QAAAA,GAAYjO,IAGhB,MAAAiO,KAJatc,GAAAsc","file":"dist/index.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Web3 = __webpack_require__(6);\nvar axios_1 = __webpack_require__(7);\nvar hdkey_1 = __webpack_require__(8);\nvar walletN = 256;\nvar EthConfirmation;\n(function (EthConfirmation) {\n    EthConfirmation[EthConfirmation[\"RECEIPT\"] = 0] = \"RECEIPT\";\n    EthConfirmation[EthConfirmation[\"CONFIRMATION\"] = 1] = \"CONFIRMATION\";\n    EthConfirmation[EthConfirmation[\"STATIC\"] = 2] = \"STATIC\";\n})(EthConfirmation = exports.EthConfirmation || (exports.EthConfirmation = {}));\nvar EthEngine = (function () {\n    function EthEngine(abiConfiguration, configuration, bin) {\n        this.abiConfiguration = abiConfiguration;\n        this.configuration = configuration;\n        this.bin = bin;\n        this.maxThreads = 20;\n        this.firstBlockNumber = 1909000;\n        var wsProvider = new Web3.providers.WebsocketProvider(configuration.wshost);\n        this.web3 = new Web3(wsProvider);\n        this.web3.defaultAccount = configuration.defaultWallet;\n        if (abiConfiguration) {\n            this.contract = new this.web3.eth.Contract(abiConfiguration, configuration.contractAddress);\n        }\n    }\n    EthEngine.prototype.isListening = function () {\n        return this.web3.currentProvider.connection.readyState === 0 ||\n            this.web3.currentProvider.connection.readyState === 1;\n    };\n    EthEngine.prototype.createAccount = function (password) {\n        var accounts = this.web3.eth.accounts;\n        var acc = accounts.create();\n        var keystore = acc.encrypt(password, { n: walletN });\n        return {\n            wallet: acc,\n            keystore: keystore,\n        };\n    };\n    EthEngine.prototype.login = function (keystore) {\n        this.configuration.defaultWallet = keystore.address;\n        this.web3.eth.accounts.wallet.add(keystore);\n        this.web3.eth.defaultAccount = keystore.address;\n        return keystore;\n    };\n    EthEngine.prototype.getBalance = function (address) {\n        var _this = this;\n        return this.web3.eth.getBalance(address).bind(this).then(function (balance) {\n            return _this.web3.utils.fromWei(balance, \"ether\");\n        });\n    };\n    EthEngine.prototype.sendAllEther = function (privateKey, toAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentBalance, currentGasPrice, estimateGas, signedTx;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.getBalance(this.web3.eth.defaultAccount)];\n                    case 1:\n                        currentBalance = _a.sent();\n                        return [4, this.web3.eth.getGasPrice()];\n                    case 2:\n                        currentGasPrice = _a.sent();\n                        return [4, this.web3.eth.estimateGas({\n                                from: this.web3.eth.defaultAccount,\n                                to: toAddress,\n                                amount: currentBalance,\n                            })];\n                    case 3:\n                        estimateGas = _a.sent();\n                        return [4, this.web3.eth.signTransaction({\n                                from: this.web3.eth.defaultAccount,\n                                gasPrice: currentGasPrice,\n                                gas: estimateGas,\n                                gasLimit: estimateGas * 2,\n                                to: toAddress,\n                                value: currentBalance - estimateGas * currentGasPrice * 2,\n                                data: \"\",\n                            }, privateKey)];\n                    case 4:\n                        signedTx = _a.sent();\n                        return [2, this.web3.eth.sendSignedTransaction(signedTx.rawTransaction)];\n                }\n            });\n        });\n    };\n    EthEngine.prototype.sendEther = function (toAddress, balance) {\n        return __awaiter(this, void 0, void 0, function () {\n            var weiBalance, currentGasPrice, estimateGas;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        weiBalance = this.web3.utils.toWei(balance, \"ether\");\n                        return [4, this.web3.eth.getGasPrice()];\n                    case 1:\n                        currentGasPrice = _a.sent();\n                        return [4, this.web3.eth.estimateGas({\n                                from: this.web3.eth.defaultAccount,\n                                to: toAddress,\n                                amount: weiBalance,\n                            })];\n                    case 2:\n                        estimateGas = _a.sent();\n                        return [4, this.web3.eth.sendTransaction({\n                                from: this.web3.eth.defaultAccount,\n                                gasPrice: currentGasPrice,\n                                gas: estimateGas,\n                                gasLimit: estimateGas * 2,\n                                to: toAddress,\n                                value: weiBalance,\n                            })];\n                    case 3: return [2, _a.sent()];\n                }\n            });\n        });\n    };\n    EthEngine.prototype.getContractCode = function (contractAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.web3.eth.getCode(contractAddress)];\n                    case 1: return [2, _a.sent()];\n                }\n            });\n        });\n    };\n    EthEngine.prototype.callFunction = function (name, params, generalParams, confirmation, abi, contractAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var contract, code, defaultWallet, payable, ets, method, GAS_PRICE, GAS, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        confirmation = confirmation === undefined ? 0 : confirmation;\n                        contract = null;\n                        code = null;\n                        defaultWallet = null;\n                        payable = this.isMethodPayable(name, abi === undefined ? this.abiConfiguration : abi);\n                        if (!(abi && contractAddress)) return [3, 3];\n                        if (!payable) return [3, 2];\n                        return [4, this.getContractCode(contractAddress)];\n                    case 1:\n                        code = _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        contract = new this.web3.eth.Contract(abi, contractAddress);\n                        defaultWallet = this.configuration.defaultWallet;\n                        return [3, 4];\n                    case 3:\n                        defaultWallet = this.abiConfiguration.defaultWallet;\n                        code = this.bin.code;\n                        contract = new this.web3.eth.Contract(this.abiConfiguration, this.configuration.contractAddress);\n                        _b.label = 4;\n                    case 4:\n                        if (!(generalParams.gas === undefined && payable)) return [3, 6];\n                        return [4, this.web3.eth.estimateGas({ data: code, to: defaultWallet })];\n                    case 5:\n                        ets = _b.sent();\n                        generalParams.gas = ets;\n                        generalParams.gasLimit = ets * 2;\n                        _b.label = 6;\n                    case 6:\n                        method = (_a = contract.methods)[name].apply(_a, params);\n                        return [4, this.web3.eth.getGasPrice()];\n                    case 7:\n                        GAS_PRICE = _b.sent();\n                        return [4, method.estimateGas(generalParams)];\n                    case 8:\n                        GAS = _b.sent();\n                        generalParams.gas = GAS;\n                        generalParams.gasLimit = GAS * 2;\n                        generalParams.gasPrice = GAS_PRICE;\n                        return [2, new Promise(function (resolve, reject) {\n                                try {\n                                    switch (confirmation) {\n                                        case EthConfirmation.RECEIPT: {\n                                            method.send(generalParams).on(\"receipt\", function (rec) {\n                                                resolve(rec);\n                                            }).catch(function (err) {\n                                                reject(err);\n                                            });\n                                            break;\n                                        }\n                                        case EthConfirmation.CONFIRMATION: {\n                                            method.send(generalParams).on(\"confirmation\", function (confNumber, receipt) {\n                                                receipt.confNumber = confNumber;\n                                                resolve(receipt);\n                                            }).catch(function (err) {\n                                                reject(err);\n                                            });\n                                            break;\n                                        }\n                                        case EthConfirmation.STATIC: {\n                                            method.call(generalParams, function (err, result) {\n                                                if (err) {\n                                                    reject(err);\n                                                }\n                                                else {\n                                                    resolve(result);\n                                                }\n                                            });\n                                            break;\n                                        }\n                                    }\n                                }\n                                catch (e) {\n                                    reject(e);\n                                }\n                            })];\n                }\n            });\n        });\n    };\n    EthEngine.prototype.recoverAccount = function (pkSeed) {\n        var HDKey = new hdkey_1.default.fromMasterSeed(pkSeed);\n        var hdnode = HDKey.derive(\"m/44'/60'/0'/0/0\");\n        var privKey = hdnode._privateKey.toString();\n        var accounts = this.web3.eth.accounts;\n        var acc = accounts.privateKeyToAccount(\"0x\" + privKey);\n        return acc;\n    };\n    EthEngine.prototype.toWei = function (amount, conversion) {\n        return this.web3.utils.toWei(amount, conversion);\n    };\n    EthEngine.prototype.fromWeiToEther = function (weiValue) {\n        var ether = this.web3.utils.fromWei(weiValue, \"ether\");\n        return ether;\n    };\n    EthEngine.prototype.isMethodPayable = function (name, abi) {\n        for (var i in abi) {\n            if (abi[i].name === name) {\n                return abi[i].stateMutability !== \"nonpayable\";\n            }\n        }\n        return false;\n    };\n    EthEngine.prototype.getTransactionList = function (address) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.getTransactionsFromBlockCypher(address)];\n                    case 1: return [2, _a.sent()];\n                }\n            });\n        });\n    };\n    EthEngine.prototype.scanBlockRange = function (startingBlock, stoppingBlock, callback) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var that, results;\n            return __generator(this, function (_a) {\n                that = this;\n                results = [];\n                return [2, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\n                        function getPercentComplete(bn) {\n                            var t = stoppingBlock - startingBlock;\n                            var n = bn - startingBlock;\n                            return Math.floor(n / t * 100);\n                        }\n                        function scanTransactionCallback(txn, block) {\n                            if (txn.to === that.web3.defaultAccount) {\n                                var ether = that.web3.utils.fromWei(txn.value, \"ether\");\n                                var message = \"\\r\" + block.timestamp + \" +\" + ether + \" from \" + txn.from;\n                                results.push(message);\n                            }\n                            else if (txn.from === that.web3.defaultAccount) {\n                                var ether = that.web3.utils.fromWei(txn.value, \"ether\");\n                                var message = \"\\r\" + block.timestamp + \" -\" + ether + \" to \" + txn.to;\n                                results.push(message);\n                            }\n                        }\n                        function exitThread() {\n                            if (--numThreads === 0) {\n                                var numBlocksScanned = 1 + stoppingBlock - startingBlock;\n                                var stopTime = new Date();\n                                var duration = (stopTime.getTime() - startTime.getTime()) / 1000;\n                                var blocksPerSec = Math.floor(numBlocksScanned / duration);\n                                var msg = \"Scanned to block \" + stoppingBlock + \" (\" + numBlocksScanned + \" in \" + duration + \" seconds; \" + blocksPerSec + \" blocks/sec).\";\n                                var len = msg.length;\n                                var numSpaces = process.stdout.columns - len;\n                                var spaces = Array(1 + numSpaces).join(\" \");\n                                process.stdout.write(\"\\r\" + msg + spaces + \"\\n\");\n                                if (callback) {\n                                    callback(gotError, stoppingBlock);\n                                }\n                            }\n                            resolve(results);\n                            return numThreads;\n                        }\n                        function scanBlockCallback(block) {\n                            if (block.transactions) {\n                                for (var _i = 0, _a = block.transactions; _i < _a.length; _i++) {\n                                    var i = _a[_i];\n                                    var txn = i;\n                                    scanTransactionCallback(txn, block);\n                                }\n                            }\n                        }\n                        function asyncScanNextBlock() {\n                            if (gotError) {\n                                return exitThread();\n                            }\n                            if (blockNumber > stoppingBlock) {\n                                return exitThread();\n                            }\n                            var myBlockNumber = blockNumber++;\n                            if (myBlockNumber % that.maxThreads === 0 || myBlockNumber === stoppingBlock) {\n                                var pctDone = getPercentComplete(myBlockNumber);\n                                process.stdout.write(\"\\rScanning block \" + myBlockNumber + \" - \" + pctDone + \" %\");\n                            }\n                            that.web3.eth.getBlock(myBlockNumber, true, function (error, block) {\n                                if (error) {\n                                    gotError = true;\n                                }\n                                else {\n                                    scanBlockCallback(block);\n                                    asyncScanNextBlock();\n                                }\n                            });\n                        }\n                        var blockNumber, gotError, numThreads, startTime, nt;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    if (!!stoppingBlock) return [3, 2];\n                                    return [4, that.web3.eth.getBlockNumber()];\n                                case 1:\n                                    stoppingBlock = _a.sent();\n                                    _a.label = 2;\n                                case 2:\n                                    if (!startingBlock) {\n                                        startingBlock = stoppingBlock - 10;\n                                    }\n                                    if (startingBlock > stoppingBlock) {\n                                        return [2, -1];\n                                    }\n                                    blockNumber = startingBlock;\n                                    gotError = false;\n                                    numThreads = 0;\n                                    startTime = new Date();\n                                    for (nt = 0; nt < that.maxThreads && startingBlock + nt <= stoppingBlock; nt++) {\n                                        numThreads++;\n                                        asyncScanNextBlock();\n                                    }\n                                    return [2, nt];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    EthEngine.prototype.getFeeFromBlockCypher = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, axios_1.default.get(\"https://api.blockcypher.com/v1/btc/test3\")];\n                    case 1:\n                        res = _a.sent();\n                        return [2, res.data.result.medium_fee_per_kb];\n                }\n            });\n        });\n    };\n    EthEngine.prototype.getTransactionsFromBlockCypher = function (address, limit) {\n        if (limit === void 0) { limit = \"50\"; }\n        return __awaiter(this, void 0, void 0, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, axios_1.default.get(\"https://api.blockcypher.com/v1/beth/test/addrs/\" + address + \"/full?limit=\" + limit)];\n                    case 1:\n                        res = _a.sent();\n                        return [2, res.data];\n                }\n            });\n        });\n    };\n    return EthEngine;\n}());\nexports.EthEngine = EthEngine;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AugurTokenTestnet = (function () {\n    function AugurTokenTestnet(ethEngine) {\n    }\n    return AugurTokenTestnet;\n}());\nexports.AugurTokenTestnet = AugurTokenTestnet;\nvar AugurTokenMainnet = (function () {\n    function AugurTokenMainnet(ethEngine) {\n    }\n    return AugurTokenMainnet;\n}());\nexports.AugurTokenMainnet = AugurTokenMainnet;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(3));\nvar seed_1 = __webpack_require__(11);\nexports.generateMnemonic = seed_1.generateMnemonic;\n__export(__webpack_require__(13));\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(4));\n__export(__webpack_require__(0));\n__export(__webpack_require__(9));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AppConfig = __webpack_require__(5);\nvar EthereumWallet = (function () {\n    function EthereumWallet() {\n        this.walletAddress = undefined;\n        this.appConfiguration = AppConfig.EthConfiguration.hosts[0];\n    }\n    EthereumWallet.prototype.getAddress = function () {\n        return \"0x\" + this.walletAddress;\n    };\n    EthereumWallet.prototype.login = function (keystore) {\n        var acc = this.engine.login(keystore);\n        if (acc.address.length > 2) {\n            this.walletAddress = acc.address.slice(2);\n        }\n        return acc;\n    };\n    EthereumWallet.prototype.create = function (password) {\n        return this.engine.createAccount(password);\n    };\n    EthereumWallet.prototype.recover = function (privateKey) {\n        return this.engine.recoverAccount(privateKey);\n    };\n    EthereumWallet.prototype.getbalance = function (address) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.engine.getBalance(address)];\n                    case 1: return [2, _a.sent()];\n                }\n            });\n        });\n    };\n    EthereumWallet.prototype.sendAllEther = function (privateKey, toAddress) {\n        return this.engine.sendAllEther(privateKey, toAddress);\n    };\n    EthereumWallet.prototype.isWebSocketAlive = function () {\n        return this.engine.isListening();\n    };\n    return EthereumWallet;\n}());\nexports.EthereumWallet = EthereumWallet;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthConfiguration = {\n    apihost: \"http://34.215.58.192:9984/api/v1/\",\n    wshost: \"ws://34.215.58.192:9985/api/v1/streams/valid_transactions\",\n    appid: \"DLiUBJ8NGMh6ojuFjwAqhF4L8D2hUsSH5CCcH1X648Fe\",\n    appkey: \"GgZtjS6WPDNAePNM43ZdPoJ1Ap61RU3jnsgjHqELxgHX\",\n    hosts: [\n        {\n            wshost: \"wss://swap.altcoin.io:8550\",\n            contractAddress: \"0x6d5ae9dd8f1a2582deb1b096915313459f11ba70\",\n            defaultWallet: \"0xb483f5a8c6ebA74Dc1bcef9D167E6B86Caa4C773\",\n        },\n        {\n            wshost: \"wss://swap.altcoin.io:8550\",\n            contractAddress: \"0x6d5ae9dd8f1a2582deb1b096915313459f11ba70\",\n            defaultWallet: \"0x21Fa313f2144f6E1348d91FbF0C6A3a5EEcC056D\",\n        },\n    ],\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"web3/src\");\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"axios\");\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"hdkey\");\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar abiutil_1 = __webpack_require__(10);\nvar eth_engine_1 = __webpack_require__(0);\nvar abiParams = abiutil_1.AbiUtil.abiParams;\nvar AbiType = abiutil_1.AbiUtil.AbiType;\nvar getAbiParams = abiutil_1.AbiUtil.getAbiParams;\nvar ERC20 = (function () {\n    function ERC20(contractAddress, ethEngine) {\n        this.contractAddress = contractAddress;\n        this.ethEngine = ethEngine;\n    }\n    ERC20.prototype.totalSupply = function () {\n        return 0;\n    };\n    ERC20.prototype.balanceOf = function (owner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var abi, generalParams, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        abi = getAbiParams(this, \"balanceOf\");\n                        generalParams = {\n                            from: this.ethEngine.configuration.defaultWallet\n                        };\n                        return [4, this.ethEngine.callFunction(\"balanceOf\", [owner], generalParams, eth_engine_1.EthConfirmation.STATIC, abi, this.contractAddress)];\n                    case 1:\n                        result = _a.sent();\n                        return [2, this.ethEngine.fromWeiToEther(result)];\n                }\n            });\n        });\n    };\n    ERC20.prototype.transfer = function (to, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var abi, configParams, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        abi = getAbiParams(this, \"transfer\");\n                        configParams = {\n                            from: this.ethEngine.configuration.defaultWallet\n                        };\n                        return [4, this.ethEngine.callFunction(\"transfer\", [to, value], configParams, eth_engine_1.EthConfirmation.CONFIRMATION, abi, this.contractAddress)];\n                    case 1:\n                        result = _a.sent();\n                        return [2, result];\n                }\n            });\n        });\n    };\n    ERC20.prototype.transferFrom = function (from, to, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var abi, configParams, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        abi = getAbiParams(this, \"transferFrom\");\n                        configParams = {\n                            from: this.ethEngine.configuration.defaultWallet\n                        };\n                        return [4, this.ethEngine.callFunction(\"transferFrom\", [from, to, value], configParams, eth_engine_1.EthConfirmation.CONFIRMATION, abi, this.contractAddress)];\n                    case 1:\n                        result = _a.sent();\n                        return [2, result];\n                }\n            });\n        });\n    };\n    ERC20.prototype.approve = function (spender, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var abi, configParams, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        abi = getAbiParams(this, \"approve\");\n                        configParams = {\n                            from: this.ethEngine.configuration.defaultWallet\n                        };\n                        return [4, this.ethEngine.callFunction(\"approve\", [spender, value], configParams, eth_engine_1.EthConfirmation.CONFIRMATION, abi, this.contractAddress)];\n                    case 1:\n                        result = _a.sent();\n                        return [2, result];\n                }\n            });\n        });\n    };\n    ERC20.prototype.allowance = function (owner, spender) {\n        return __awaiter(this, void 0, void 0, function () {\n            var abi, configParams, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        abi = getAbiParams(this, \"allowance\");\n                        configParams = {\n                            from: this.ethEngine.configuration.defaultWallet\n                        };\n                        return [4, this.ethEngine.callFunction(\"allowance\", [owner, spender], configParams, eth_engine_1.EthConfirmation.STATIC, abi, this.contractAddress)];\n                    case 1:\n                        result = _a.sent();\n                        return [2, result];\n                }\n            });\n        });\n    };\n    ERC20.prototype.faucet = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var abi, configParams, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        abi = getAbiParams(this, \"faucet\");\n                        configParams = {\n                            from: this.ethEngine.configuration.defaultWallet\n                        };\n                        return [4, this.ethEngine.callFunction(\"faucet\", [], configParams, eth_engine_1.EthConfirmation.CONFIRMATION, abi, this.contractAddress)];\n                    case 1:\n                        result = _a.sent();\n                        return [2, result];\n                }\n            });\n        });\n    };\n    __decorate([\n        abiParams({}, { \"\": AbiType.uint256 }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], ERC20.prototype, \"totalSupply\", null);\n    __decorate([\n        abiParams({}, { \"balance\": AbiType.uint256 }, { \"_owner\": AbiType.address }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], ERC20.prototype, \"balanceOf\", null);\n    __decorate([\n        abiParams({ stateMutability: \"payable\" }, { \"\": AbiType.bool }, { \"_to\": AbiType.address }, { \"_value\": AbiType.uint256 }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Number]),\n        __metadata(\"design:returntype\", Promise)\n    ], ERC20.prototype, \"transfer\", null);\n    __decorate([\n        abiParams({ stateMutability: \"payable\" }, { \"\": AbiType.bool }, { \"_from\": AbiType.uint256 }, { \"_to\": AbiType.address }, { \"_value\": AbiType.uint256 }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Number]),\n        __metadata(\"design:returntype\", Promise)\n    ], ERC20.prototype, \"transferFrom\", null);\n    __decorate([\n        abiParams({ stateMutability: \"payable\" }, { \"\": AbiType.bool }, { \"_spender\": AbiType.address }, { \"_value\": AbiType.uint256 }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Number]),\n        __metadata(\"design:returntype\", Promise)\n    ], ERC20.prototype, \"approve\", null);\n    __decorate([\n        abiParams({}, { \"\": AbiType.uint256 }, { \"_owner\": AbiType.address }, { \"_spender\": AbiType.address }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], ERC20.prototype, \"allowance\", null);\n    __decorate([\n        abiParams({ stateMutability: \"payable\" }, {}, {}),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], ERC20.prototype, \"faucet\", null);\n    return ERC20;\n}());\nexports.ERC20 = ERC20;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbiUtil;\n(function (AbiUtil) {\n    var AbiType;\n    (function (AbiType) {\n        AbiType[AbiType[\"uint\"] = 0] = \"uint\";\n        AbiType[AbiType[\"uint256\"] = 1] = \"uint256\";\n        AbiType[AbiType[\"address\"] = 2] = \"address\";\n        AbiType[AbiType[\"bool\"] = 3] = \"bool\";\n        AbiType[AbiType[\"bytes32\"] = 4] = \"bytes32\";\n        AbiType[AbiType[\"bytes20\"] = 5] = \"bytes20\";\n    })(AbiType = AbiUtil.AbiType || (AbiUtil.AbiType = {}));\n    AbiUtil.abiParams = function (functionData, returnType) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function (target, functionName, descriptor) {\n            var root = {};\n            root.inputs = [];\n            root.constant = functionData.constant === undefined ? false : functionData.constant;\n            root.outputs = [];\n            root.name = functionName;\n            root.type = functionData.type === undefined ? \"function\" : functionData.type;\n            root.payable = functionData.payable === undefined ? false : functionData.payable;\n            root.stateMutability = functionData.stateMutability === undefined ? \"nonpayable\" : functionData.stateMutability;\n            if (params) {\n                params.forEach(function (v) {\n                    for (var ret in v) {\n                        if (v.hasOwnProperty(ret)) {\n                            root.inputs.push({ \"name\": ret, \"type\": AbiType[v[ret]] });\n                        }\n                    }\n                });\n            }\n            for (var ret in returnType) {\n                if (returnType.hasOwnProperty(ret)) {\n                    root.outputs.push({ \"name\": ret, \"type\": AbiType[returnType[ret]] });\n                }\n            }\n            var rootData = [];\n            rootData.push(root);\n            Reflect.defineMetadata(\"abiParams\", rootData, target, functionName);\n        };\n    };\n    AbiUtil.getAbiParams = function (target, propertyKey) {\n        return Reflect.getMetadata(\"abiParams\", target, propertyKey);\n    };\n})(AbiUtil = exports.AbiUtil || (exports.AbiUtil = {}));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bip39 = __webpack_require__(12);\nexports.generateMnemonic = function () {\n    return bip39.generateMnemonic();\n};\nvar EXTERNAL_CHAIN = 0;\nvar INTERNAL_CHAIN = 1;\nvar Bip44Wallet = (function () {\n    function Bip44Wallet(mnemonic) {\n        this.account = 0;\n        this.interalAddressIndex = 0;\n        this.externalAddressIndex = 0;\n        if (!mnemonic) {\n            mnemonic = exports.generateMnemonic();\n        }\n        var seed = bip39.mnemonicToSeed(mnemonic);\n    }\n    return Bip44Wallet;\n}());\nexports.Bip44Wallet = Bip44Wallet;\nvar EthBip44Wallet = (function (_super) {\n    __extends(EthBip44Wallet, _super);\n    function EthBip44Wallet() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.coin = 60;\n        return _this;\n    }\n    return EthBip44Wallet;\n}(Bip44Wallet));\nexports.EthBip44Wallet = EthBip44Wallet;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"bip39\");\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(14));\n__export(__webpack_require__(1));\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar aragon_1 = __webpack_require__(15);\nvar augur_1 = __webpack_require__(1);\nvar bat_1 = __webpack_require__(16);\nvar eos_1 = __webpack_require__(17);\nvar gnosis_1 = __webpack_require__(18);\nvar golem_1 = __webpack_require__(19);\nvar salt_1 = __webpack_require__(20);\nvar civic_1 = __webpack_require__(21);\nvar omisego_1 = __webpack_require__(22);\nvar district0x_1 = __webpack_require__(23);\nvar statusnetwork_1 = __webpack_require__(24);\nvar substratum_1 = __webpack_require__(25);\nvar tron_1 = __webpack_require__(26);\nvar bytom_1 = __webpack_require__(27);\nvar dent_1 = __webpack_require__(28);\nvar populous_1 = __webpack_require__(29);\nvar maker_1 = __webpack_require__(30);\nvar digixdao_1 = __webpack_require__(31);\nvar qash_1 = __webpack_require__(32);\nvar ethos_1 = __webpack_require__(33);\nvar funfair_1 = __webpack_require__(34);\nvar requestnetwork_1 = __webpack_require__(35);\nvar enjincoin_1 = __webpack_require__(36);\nvar monaco_1 = __webpack_require__(37);\nvar edgeless_1 = __webpack_require__(38);\nvar vechain_1 = __webpack_require__(39);\nvar icon_1 = __webpack_require__(40);\nvar zerox_1 = __webpack_require__(41);\nvar bancor_1 = __webpack_require__(42);\nvar iconomi_1 = __webpack_require__(43);\nvar tenxpay_1 = __webpack_require__(44);\nvar storj_1 = __webpack_require__(45);\nvar TOKENS;\n(function (TOKENS) {\n    TOKENS[TOKENS[\"AUGUR\"] = 1] = \"AUGUR\";\n    TOKENS[TOKENS[\"GOLEM\"] = 2] = \"GOLEM\";\n    TOKENS[TOKENS[\"GNOSIS\"] = 3] = \"GNOSIS\";\n    TOKENS[TOKENS[\"BAT\"] = 4] = \"BAT\";\n    TOKENS[TOKENS[\"ARAGON\"] = 5] = \"ARAGON\";\n    TOKENS[TOKENS[\"EOS\"] = 6] = \"EOS\";\n    TOKENS[TOKENS[\"SALT\"] = 7] = \"SALT\";\n    TOKENS[TOKENS[\"CIVIC\"] = 8] = \"CIVIC\";\n    TOKENS[TOKENS[\"OMISEGO\"] = 9] = \"OMISEGO\";\n    TOKENS[TOKENS[\"DISTRICT0X\"] = 10] = \"DISTRICT0X\";\n    TOKENS[TOKENS[\"STATUSNETWORK\"] = 11] = \"STATUSNETWORK\";\n    TOKENS[TOKENS[\"SUBSTRATUM\"] = 12] = \"SUBSTRATUM\";\n    TOKENS[TOKENS[\"TRON\"] = 13] = \"TRON\";\n    TOKENS[TOKENS[\"BYTOM\"] = 14] = \"BYTOM\";\n    TOKENS[TOKENS[\"DENT\"] = 15] = \"DENT\";\n    TOKENS[TOKENS[\"POPULOUS\"] = 16] = \"POPULOUS\";\n    TOKENS[TOKENS[\"MAKER\"] = 17] = \"MAKER\";\n    TOKENS[TOKENS[\"DIGIXDAO\"] = 18] = \"DIGIXDAO\";\n    TOKENS[TOKENS[\"QASH\"] = 19] = \"QASH\";\n    TOKENS[TOKENS[\"ETHOS\"] = 20] = \"ETHOS\";\n    TOKENS[TOKENS[\"FUNFAIR\"] = 21] = \"FUNFAIR\";\n    TOKENS[TOKENS[\"REQUESTNETWORK\"] = 22] = \"REQUESTNETWORK\";\n    TOKENS[TOKENS[\"BANCOR\"] = 23] = \"BANCOR\";\n    TOKENS[TOKENS[\"ICONOMI\"] = 24] = \"ICONOMI\";\n    TOKENS[TOKENS[\"TENXPAY\"] = 25] = \"TENXPAY\";\n    TOKENS[TOKENS[\"STORJ\"] = 26] = \"STORJ\";\n    TOKENS[TOKENS[\"ENJINCOIN\"] = 27] = \"ENJINCOIN\";\n    TOKENS[TOKENS[\"MONACO\"] = 28] = \"MONACO\";\n    TOKENS[TOKENS[\"EDGELESS\"] = 29] = \"EDGELESS\";\n    TOKENS[TOKENS[\"VECHAIN\"] = 30] = \"VECHAIN\";\n    TOKENS[TOKENS[\"ICON\"] = 31] = \"ICON\";\n    TOKENS[TOKENS[\"ZEROX\"] = 32] = \"ZEROX\";\n})(TOKENS = exports.TOKENS || (exports.TOKENS = {}));\nvar TokenFactory = (function () {\n    function TokenFactory() {\n    }\n    TokenFactory.GetToken = function (token, engine, testnet) {\n        if (testnet === void 0) { testnet = true; }\n        if (!testnet) {\n            return this.GetTokenMain(token, engine);\n        }\n        switch (token) {\n            case TOKENS.GOLEM: {\n                return new golem_1.GolemTokenTestnet(engine);\n            }\n            case TOKENS.AUGUR: {\n                return new augur_1.AugurTokenTestnet(engine);\n            }\n            case TOKENS.GNOSIS: {\n                return new gnosis_1.GnosisTokenTestnet(engine);\n            }\n            case TOKENS.BAT: {\n                return new bat_1.BatTokenTestnet(engine);\n            }\n            case TOKENS.ARAGON: {\n                return new aragon_1.AragonTokenTestnet(engine);\n            }\n            case TOKENS.EOS: {\n                return new eos_1.EosTokenTestnet(engine);\n            }\n            case TOKENS.SALT: {\n                return new salt_1.SaltTokenTestnet(engine);\n            }\n            case TOKENS.CIVIC: {\n                return new civic_1.CivicTokenTestnet(engine);\n            }\n            case TOKENS.OMISEGO: {\n                return new omisego_1.OmiseGoTokenTestnet(engine);\n            }\n            case TOKENS.DISTRICT0X: {\n                return new district0x_1.District0xTokenTestnet(engine);\n            }\n            case TOKENS.STATUSNETWORK: {\n                return new statusnetwork_1.StatusNetworkTokenTestnet(engine);\n            }\n            case TOKENS.SUBSTRATUM: {\n                return new substratum_1.SubstratumTokenTestnet(engine);\n            }\n            case TOKENS.TRON: {\n                return new tron_1.TronTokenTestnet(engine);\n            }\n            case TOKENS.BYTOM: {\n                return new bytom_1.BytomTokenTestnet(engine);\n            }\n            case TOKENS.DENT: {\n                return new dent_1.DentTokenTestnet(engine);\n            }\n            case TOKENS.POPULOUS: {\n                return new populous_1.PopulousTokenTestnet(engine);\n            }\n            case TOKENS.MAKER: {\n                return new maker_1.MakerTokenTestnet(engine);\n            }\n            case TOKENS.DIGIXDAO: {\n                return new digixdao_1.DigixDAOTokenTestnet(engine);\n            }\n            case TOKENS.QASH: {\n                return new qash_1.QASHTokenTestnet(engine);\n            }\n            case TOKENS.ETHOS: {\n                return new ethos_1.EthosTokenTestnet(engine);\n            }\n            case TOKENS.FUNFAIR: {\n                return new funfair_1.FunFairTokenTestnet(engine);\n            }\n            case TOKENS.REQUESTNETWORK: {\n                return new requestnetwork_1.RequestNetworkTokenTestnet(engine);\n            }\n            case TOKENS.BANCOR: {\n                return new bancor_1.BancorTokenTestnet(engine);\n            }\n            case TOKENS.ICONOMI: {\n                return new iconomi_1.IconomiTokenTestnet(engine);\n            }\n            case TOKENS.TENXPAY: {\n                return new tenxpay_1.TenXPayTokenTestnet(engine);\n            }\n            case TOKENS.STORJ: {\n                return new storj_1.StorjTokenTestnet(engine);\n            }\n            case TOKENS.ENJINCOIN: {\n                return new enjincoin_1.EnjinCoinTokenTestnet(engine);\n            }\n            case TOKENS.MONACO: {\n                return new monaco_1.MonacoTokenTestnet(engine);\n            }\n            case TOKENS.EDGELESS: {\n                return new edgeless_1.EdgelessTokenTestnet(engine);\n            }\n            case TOKENS.VECHAIN: {\n                return new vechain_1.VeChainTokenTestnet(engine);\n            }\n            case TOKENS.ICON: {\n                return new icon_1.ICONTokenTestnet(engine);\n            }\n            case TOKENS.ZEROX: {\n                return new zerox_1.ZeroXTokenTestnet(engine);\n            }\n        }\n    };\n    TokenFactory.GetTokenMain = function (token, engine) {\n        switch (token) {\n            case TOKENS.GOLEM: {\n                return new golem_1.GolemTokenMainnet(engine);\n            }\n            case TOKENS.AUGUR: {\n                return new augur_1.AugurTokenMainnet(engine);\n            }\n            case TOKENS.GNOSIS: {\n                return new gnosis_1.GnosisTokenMainnet(engine);\n            }\n            case TOKENS.BAT: {\n                return new bat_1.BatTokenMainnet(engine);\n            }\n            case TOKENS.ARAGON: {\n                return new aragon_1.AragonTokenMainnet(engine);\n            }\n            case TOKENS.EOS: {\n                return new eos_1.EosTokenMainnet(engine);\n            }\n            case TOKENS.SALT: {\n                return new salt_1.SaltTokenMainnet(engine);\n            }\n            case TOKENS.CIVIC: {\n                return new civic_1.CivicTokenMainnet(engine);\n            }\n            case TOKENS.OMISEGO: {\n                return new omisego_1.OmiseGoTokenMainnet(engine);\n            }\n            case TOKENS.DISTRICT0X: {\n                return new district0x_1.District0xTokenMainnet(engine);\n            }\n            case TOKENS.STATUSNETWORK: {\n                return new statusnetwork_1.StatusNetworkTokenMainnet(engine);\n            }\n            case TOKENS.SUBSTRATUM: {\n                return new substratum_1.SubstratumTokenMainnet(engine);\n            }\n            case TOKENS.TRON: {\n                return new tron_1.TronTokenMainnet(engine);\n            }\n            case TOKENS.BYTOM: {\n                return new bytom_1.BytomTokenMainnet(engine);\n            }\n            case TOKENS.DENT: {\n                return new dent_1.DentTokenTestnet(engine);\n            }\n            case TOKENS.POPULOUS: {\n                return new populous_1.PopulousTokenTestnet(engine);\n            }\n            case TOKENS.MAKER: {\n                return new maker_1.MakerTokenTestnet(engine);\n            }\n            case TOKENS.DIGIXDAO: {\n                return new digixdao_1.DigixDAOTokenTestnet(engine);\n            }\n            case TOKENS.QASH: {\n                return new qash_1.QASHTokenTestnet(engine);\n            }\n            case TOKENS.ETHOS: {\n                return new ethos_1.EthosTokenTestnet(engine);\n            }\n            case TOKENS.FUNFAIR: {\n                return new funfair_1.FunFairTokenTestnet(engine);\n            }\n            case TOKENS.REQUESTNETWORK: {\n                return new requestnetwork_1.RequestNetworkTokenTestnet(engine);\n            }\n            case TOKENS.BANCOR: {\n                return new bancor_1.BancorTokenTestnet(engine);\n            }\n            case TOKENS.ICONOMI: {\n                return new iconomi_1.IconomiTokenTestnet(engine);\n            }\n            case TOKENS.TENXPAY: {\n                return new tenxpay_1.TenXPayTokenTestnet(engine);\n            }\n            case TOKENS.STORJ: {\n                return new storj_1.StorjTokenTestnet(engine);\n            }\n            case TOKENS.ENJINCOIN: {\n                return new enjincoin_1.EnjinCoinTokenTestnet(engine);\n            }\n            case TOKENS.MONACO: {\n                return new monaco_1.MonacoTokenTestnet(engine);\n            }\n            case TOKENS.EDGELESS: {\n                return new edgeless_1.EdgelessTokenTestnet(engine);\n            }\n            case TOKENS.VECHAIN: {\n                return new vechain_1.VeChainTokenTestnet(engine);\n            }\n            case TOKENS.ICON: {\n                return new icon_1.ICONTokenTestnet(engine);\n            }\n            case TOKENS.ZEROX: {\n                return new zerox_1.ZeroXTokenTestnet(engine);\n            }\n        }\n    };\n    return TokenFactory;\n}());\nexports.TokenFactory = TokenFactory;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AragonTokenTestnet = (function () {\n    function AragonTokenTestnet(ethEngine) {\n    }\n    return AragonTokenTestnet;\n}());\nexports.AragonTokenTestnet = AragonTokenTestnet;\nvar AragonTokenMainnet = (function () {\n    function AragonTokenMainnet(ethEngine) {\n    }\n    return AragonTokenMainnet;\n}());\nexports.AragonTokenMainnet = AragonTokenMainnet;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BatTokenTestnet = (function () {\n    function BatTokenTestnet(ethEngine) {\n    }\n    return BatTokenTestnet;\n}());\nexports.BatTokenTestnet = BatTokenTestnet;\nvar BatTokenMainnet = (function () {\n    function BatTokenMainnet(ethEngine) {\n    }\n    return BatTokenMainnet;\n}());\nexports.BatTokenMainnet = BatTokenMainnet;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EosTokenTestnet = (function () {\n    function EosTokenTestnet(ethEngine) {\n    }\n    return EosTokenTestnet;\n}());\nexports.EosTokenTestnet = EosTokenTestnet;\nvar EosTokenMainnet = (function () {\n    function EosTokenMainnet(ethEngine) {\n    }\n    return EosTokenMainnet;\n}());\nexports.EosTokenMainnet = EosTokenMainnet;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GnosisTokenTestnet = (function () {\n    function GnosisTokenTestnet(ethEngine) {\n    }\n    return GnosisTokenTestnet;\n}());\nexports.GnosisTokenTestnet = GnosisTokenTestnet;\nvar GnosisTokenMainnet = (function () {\n    function GnosisTokenMainnet(ethEngine) {\n    }\n    return GnosisTokenMainnet;\n}());\nexports.GnosisTokenMainnet = GnosisTokenMainnet;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GolemTokenTestnet = (function () {\n    function GolemTokenTestnet(ethEngine) {\n    }\n    return GolemTokenTestnet;\n}());\nexports.GolemTokenTestnet = GolemTokenTestnet;\nvar GolemTokenMainnet = (function () {\n    function GolemTokenMainnet(ethEngine) {\n    }\n    return GolemTokenMainnet;\n}());\nexports.GolemTokenMainnet = GolemTokenMainnet;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SaltTokenTestnet = (function () {\n    function SaltTokenTestnet(ethEngine) {\n    }\n    return SaltTokenTestnet;\n}());\nexports.SaltTokenTestnet = SaltTokenTestnet;\nvar SaltTokenMainnet = (function () {\n    function SaltTokenMainnet(ethEngine) {\n    }\n    return SaltTokenMainnet;\n}());\nexports.SaltTokenMainnet = SaltTokenMainnet;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CivicTokenTestnet = (function () {\n    function CivicTokenTestnet(ethEngine) {\n    }\n    return CivicTokenTestnet;\n}());\nexports.CivicTokenTestnet = CivicTokenTestnet;\nvar CivicTokenMainnet = (function () {\n    function CivicTokenMainnet(ethEngine) {\n    }\n    return CivicTokenMainnet;\n}());\nexports.CivicTokenMainnet = CivicTokenMainnet;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OmiseGoTokenTestnet = (function () {\n    function OmiseGoTokenTestnet(ethEngine) {\n    }\n    return OmiseGoTokenTestnet;\n}());\nexports.OmiseGoTokenTestnet = OmiseGoTokenTestnet;\nvar OmiseGoTokenMainnet = (function () {\n    function OmiseGoTokenMainnet(ethEngine) {\n    }\n    return OmiseGoTokenMainnet;\n}());\nexports.OmiseGoTokenMainnet = OmiseGoTokenMainnet;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar District0xTokenTestnet = (function () {\n    function District0xTokenTestnet(ethEngine) {\n    }\n    return District0xTokenTestnet;\n}());\nexports.District0xTokenTestnet = District0xTokenTestnet;\nvar District0xTokenMainnet = (function () {\n    function District0xTokenMainnet(ethEngine) {\n    }\n    return District0xTokenMainnet;\n}());\nexports.District0xTokenMainnet = District0xTokenMainnet;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StatusNetworkTokenTestnet = (function () {\n    function StatusNetworkTokenTestnet(ethEngine) {\n    }\n    return StatusNetworkTokenTestnet;\n}());\nexports.StatusNetworkTokenTestnet = StatusNetworkTokenTestnet;\nvar StatusNetworkTokenMainnet = (function () {\n    function StatusNetworkTokenMainnet(ethEngine) {\n    }\n    return StatusNetworkTokenMainnet;\n}());\nexports.StatusNetworkTokenMainnet = StatusNetworkTokenMainnet;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubstratumTokenTestnet = (function () {\n    function SubstratumTokenTestnet(ethEngine) {\n    }\n    return SubstratumTokenTestnet;\n}());\nexports.SubstratumTokenTestnet = SubstratumTokenTestnet;\nvar SubstratumTokenMainnet = (function () {\n    function SubstratumTokenMainnet(ethEngine) {\n    }\n    return SubstratumTokenMainnet;\n}());\nexports.SubstratumTokenMainnet = SubstratumTokenMainnet;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TronTokenTestnet = (function () {\n    function TronTokenTestnet(ethEngine) {\n    }\n    return TronTokenTestnet;\n}());\nexports.TronTokenTestnet = TronTokenTestnet;\nvar TronTokenMainnet = (function () {\n    function TronTokenMainnet(ethEngine) {\n    }\n    return TronTokenMainnet;\n}());\nexports.TronTokenMainnet = TronTokenMainnet;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BytomTokenTestnet = (function () {\n    function BytomTokenTestnet(ethEngine) {\n    }\n    return BytomTokenTestnet;\n}());\nexports.BytomTokenTestnet = BytomTokenTestnet;\nvar BytomTokenMainnet = (function () {\n    function BytomTokenMainnet(ethEngine) {\n    }\n    return BytomTokenMainnet;\n}());\nexports.BytomTokenMainnet = BytomTokenMainnet;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DentTokenTestnet = (function () {\n    function DentTokenTestnet(ethEngine) {\n    }\n    return DentTokenTestnet;\n}());\nexports.DentTokenTestnet = DentTokenTestnet;\nvar DentTokenMainnet = (function () {\n    function DentTokenMainnet(ethEngine) {\n    }\n    return DentTokenMainnet;\n}());\nexports.DentTokenMainnet = DentTokenMainnet;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PopulousTokenTestnet = (function () {\n    function PopulousTokenTestnet(ethEngine) {\n    }\n    return PopulousTokenTestnet;\n}());\nexports.PopulousTokenTestnet = PopulousTokenTestnet;\nvar PopulousTokenMainnet = (function () {\n    function PopulousTokenMainnet(ethEngine) {\n    }\n    return PopulousTokenMainnet;\n}());\nexports.PopulousTokenMainnet = PopulousTokenMainnet;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MakerTokenTestnet = (function () {\n    function MakerTokenTestnet(ethEngine) {\n    }\n    return MakerTokenTestnet;\n}());\nexports.MakerTokenTestnet = MakerTokenTestnet;\nvar MakerTokenMainnet = (function () {\n    function MakerTokenMainnet(ethEngine) {\n    }\n    return MakerTokenMainnet;\n}());\nexports.MakerTokenMainnet = MakerTokenMainnet;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DigixDAOTokenTestnet = (function () {\n    function DigixDAOTokenTestnet(ethEngine) {\n    }\n    return DigixDAOTokenTestnet;\n}());\nexports.DigixDAOTokenTestnet = DigixDAOTokenTestnet;\nvar DigixDAOTokenMainnet = (function () {\n    function DigixDAOTokenMainnet(ethEngine) {\n    }\n    return DigixDAOTokenMainnet;\n}());\nexports.DigixDAOTokenMainnet = DigixDAOTokenMainnet;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QASHTokenTestnet = (function () {\n    function QASHTokenTestnet(ethEngine) {\n    }\n    return QASHTokenTestnet;\n}());\nexports.QASHTokenTestnet = QASHTokenTestnet;\nvar QASHTokenMainnet = (function () {\n    function QASHTokenMainnet(ethEngine) {\n    }\n    return QASHTokenMainnet;\n}());\nexports.QASHTokenMainnet = QASHTokenMainnet;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EthosTokenTestnet = (function () {\n    function EthosTokenTestnet(ethEngine) {\n    }\n    return EthosTokenTestnet;\n}());\nexports.EthosTokenTestnet = EthosTokenTestnet;\nvar EthosTokenMainnet = (function () {\n    function EthosTokenMainnet(ethEngine) {\n    }\n    return EthosTokenMainnet;\n}());\nexports.EthosTokenMainnet = EthosTokenMainnet;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FunFairTokenTestnet = (function () {\n    function FunFairTokenTestnet(ethEngine) {\n    }\n    return FunFairTokenTestnet;\n}());\nexports.FunFairTokenTestnet = FunFairTokenTestnet;\nvar FunFairTokenMainnet = (function () {\n    function FunFairTokenMainnet(ethEngine) {\n    }\n    return FunFairTokenMainnet;\n}());\nexports.FunFairTokenMainnet = FunFairTokenMainnet;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RequestNetworkTokenTestnet = (function () {\n    function RequestNetworkTokenTestnet(ethEngine) {\n    }\n    return RequestNetworkTokenTestnet;\n}());\nexports.RequestNetworkTokenTestnet = RequestNetworkTokenTestnet;\nvar RequestNetworkTokenMainnet = (function () {\n    function RequestNetworkTokenMainnet(ethEngine) {\n    }\n    return RequestNetworkTokenMainnet;\n}());\nexports.RequestNetworkTokenMainnet = RequestNetworkTokenMainnet;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EnjinCoinTokenTestnet = (function () {\n    function EnjinCoinTokenTestnet(ethEngine) {\n    }\n    return EnjinCoinTokenTestnet;\n}());\nexports.EnjinCoinTokenTestnet = EnjinCoinTokenTestnet;\nvar EnjinCoinTokenMainnet = (function () {\n    function EnjinCoinTokenMainnet(ethEngine) {\n    }\n    return EnjinCoinTokenMainnet;\n}());\nexports.EnjinCoinTokenMainnet = EnjinCoinTokenMainnet;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MonacoTokenTestnet = (function () {\n    function MonacoTokenTestnet(ethEngine) {\n    }\n    return MonacoTokenTestnet;\n}());\nexports.MonacoTokenTestnet = MonacoTokenTestnet;\nvar MonacoTokenMainnet = (function () {\n    function MonacoTokenMainnet(ethEngine) {\n    }\n    return MonacoTokenMainnet;\n}());\nexports.MonacoTokenMainnet = MonacoTokenMainnet;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EdgelessTokenTestnet = (function () {\n    function EdgelessTokenTestnet(ethEngine) {\n    }\n    return EdgelessTokenTestnet;\n}());\nexports.EdgelessTokenTestnet = EdgelessTokenTestnet;\nvar EdgelessTokenMainnet = (function () {\n    function EdgelessTokenMainnet(ethEngine) {\n    }\n    return EdgelessTokenMainnet;\n}());\nexports.EdgelessTokenMainnet = EdgelessTokenMainnet;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar VeChainTokenTestnet = (function () {\n    function VeChainTokenTestnet(ethEngine) {\n    }\n    return VeChainTokenTestnet;\n}());\nexports.VeChainTokenTestnet = VeChainTokenTestnet;\nvar VeChainTokenMainnet = (function () {\n    function VeChainTokenMainnet(ethEngine) {\n    }\n    return VeChainTokenMainnet;\n}());\nexports.VeChainTokenMainnet = VeChainTokenMainnet;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ICONTokenTestnet = (function () {\n    function ICONTokenTestnet(ethEngine) {\n    }\n    return ICONTokenTestnet;\n}());\nexports.ICONTokenTestnet = ICONTokenTestnet;\nvar ICONTokenMainnet = (function () {\n    function ICONTokenMainnet(ethEngine) {\n    }\n    return ICONTokenMainnet;\n}());\nexports.ICONTokenMainnet = ICONTokenMainnet;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ZeroXTokenTestnet = (function () {\n    function ZeroXTokenTestnet(ethEngine) {\n    }\n    return ZeroXTokenTestnet;\n}());\nexports.ZeroXTokenTestnet = ZeroXTokenTestnet;\nvar ZeroXTokenMainnet = (function () {\n    function ZeroXTokenMainnet(ethEngine) {\n    }\n    return ZeroXTokenMainnet;\n}());\nexports.ZeroXTokenMainnet = ZeroXTokenMainnet;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BancorTokenTestnet = (function () {\n    function BancorTokenTestnet(ethEngine) {\n    }\n    return BancorTokenTestnet;\n}());\nexports.BancorTokenTestnet = BancorTokenTestnet;\nvar BancorTokenMainnet = (function () {\n    function BancorTokenMainnet(ethEngine) {\n    }\n    return BancorTokenMainnet;\n}());\nexports.BancorTokenMainnet = BancorTokenMainnet;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IconomiTokenTestnet = (function () {\n    function IconomiTokenTestnet(ethEngine) {\n    }\n    return IconomiTokenTestnet;\n}());\nexports.IconomiTokenTestnet = IconomiTokenTestnet;\nvar IconomiTokenMainnet = (function () {\n    function IconomiTokenMainnet(ethEngine) {\n    }\n    return IconomiTokenMainnet;\n}());\nexports.IconomiTokenMainnet = IconomiTokenMainnet;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TenXPayTokenTestnet = (function () {\n    function TenXPayTokenTestnet(ethEngine) {\n    }\n    return TenXPayTokenTestnet;\n}());\nexports.TenXPayTokenTestnet = TenXPayTokenTestnet;\nvar TenXPayTokenMainnet = (function () {\n    function TenXPayTokenMainnet(ethEngine) {\n    }\n    return TenXPayTokenMainnet;\n}());\nexports.TenXPayTokenMainnet = TenXPayTokenMainnet;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StorjTokenTestnet = (function () {\n    function StorjTokenTestnet(ethEngine) {\n    }\n    return StorjTokenTestnet;\n}());\nexports.StorjTokenTestnet = StorjTokenTestnet;\nvar StorjTokenMainnet = (function () {\n    function StorjTokenMainnet(ethEngine) {\n    }\n    return StorjTokenMainnet;\n}());\nexports.StorjTokenMainnet = StorjTokenMainnet;\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// dist/index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d58f580ab5448825b293","import * as Web3 from \"web3/src\";\nimport { Contract } from \"web3/types\";\nimport { IEthAccount } from \"./eth-account\";\nimport axios from \"axios\";\nimport hdkey from \"hdkey\";\n\nconst walletN = 256;\n\nexport enum EthConfirmation {\n    RECEIPT = 0,\n    CONFIRMATION = 1,\n    STATIC = 2,\n}\n\nexport class EthEngine {\n    protected web3: any;\n    private contract: Contract;\n    private maxThreads = 20;\n    private firstBlockNumber = 1909000;\n\n    constructor(private abiConfiguration, public configuration, private bin) {\n        const wsProvider = new Web3.providers.WebsocketProvider(configuration.wshost);\n        this.web3 = new Web3(wsProvider);\n        this.web3.defaultAccount = configuration.defaultWallet;\n\n        if (abiConfiguration) {\n            this.contract = new this.web3.eth.Contract(abiConfiguration, configuration.contractAddress);\n        }\n    }\n\n    public isListening() {\n        return this.web3.currentProvider.connection.readyState === 0 ||\n            this.web3.currentProvider.connection.readyState === 1;\n    }\n\n    public createAccount(password): IEthAccount {\n        const accounts = this.web3.eth.accounts;\n        const acc = accounts.create();\n        const keystore = acc.encrypt(password, { n: walletN });\n\n        return {\n            wallet: acc,\n            keystore,\n        } as IEthAccount;\n    }\n\n    public login(keystore) {\n        this.configuration.defaultWallet = keystore.address;\n\n        this.web3.eth.accounts.wallet.add(keystore);\n        this.web3.eth.defaultAccount = keystore.address;\n\n        return keystore;\n    }\n\n    public getBalance(address): Promise<number> {\n        return this.web3.eth.getBalance(address).bind(this).then((balance) => {\n            return this.web3.utils.fromWei(balance, \"ether\");\n        });\n    }\n\n    public async sendAllEther(privateKey, toAddress) {\n        const currentBalance = await this.getBalance(this.web3.eth.defaultAccount);\n        const currentGasPrice = await this.web3.eth.getGasPrice();\n\n        const estimateGas = await this.web3.eth.estimateGas(\n            {\n                from: this.web3.eth.defaultAccount,\n                to: toAddress,\n                amount: currentBalance,\n            },\n        );\n\n        const signedTx = await this.web3.eth.signTransaction(\n            {\n                from: this.web3.eth.defaultAccount,\n                gasPrice: currentGasPrice,\n                gas: estimateGas,\n                gasLimit: estimateGas * 2,\n                to: toAddress,\n                value: currentBalance - estimateGas * currentGasPrice * 2,\n                data: \"\",\n            }, privateKey,\n        );\n\n        return this.web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n    }\n\n    public async sendEther(toAddress, balance) {\n        const weiBalance = this.web3.utils.toWei(balance, \"ether\");\n        const currentGasPrice = await this.web3.eth.getGasPrice();\n\n        const estimateGas = await this.web3.eth.estimateGas(\n            {\n                from: this.web3.eth.defaultAccount,\n                to: toAddress,\n                amount: weiBalance,\n            },\n        );\n\n        return await this.web3.eth.sendTransaction(\n            {\n                from: this.web3.eth.defaultAccount,\n                gasPrice: currentGasPrice,\n                gas: estimateGas,\n                gasLimit: estimateGas * 2,\n                to: toAddress,\n                value: weiBalance,\n            },\n        );\n    }\n\n    public async getContractCode(contractAddress) {\n        return await this.web3.eth.getCode(contractAddress);\n    }\n\n    /**\n     * Call contract function\n     * @param name\n     * @param address\n     * @param params\n     * @param generalParams\n     * @param confirmation\n     */\n    public async callFunction(name, params, generalParams, confirmation?: EthConfirmation, abi?, contractAddress?) {\n        confirmation = confirmation === undefined ? 0 : confirmation;\n\n        let contract = null;\n        let code = null;\n        let defaultWallet = null;\n        const payable: boolean = this.isMethodPayable(name, abi === undefined ? this.abiConfiguration : abi);\n\n        if (abi && contractAddress) {\n            // Get contract code if the function is payable, otherwise skip gas fee\n            if (payable) {\n                code = await this.getContractCode(contractAddress);\n            }\n            contract = new this.web3.eth.Contract(abi, contractAddress);\n            defaultWallet = this.configuration.defaultWallet;\n        } else {\n            defaultWallet = this.abiConfiguration.defaultWallet;\n            code = this.bin.code;\n            contract = new this.web3.eth.Contract(this.abiConfiguration, this.configuration.contractAddress);\n        }\n\n        // We do not need to estimate gas if function is not payable\n        if (generalParams.gas === undefined && payable) {\n            const ets = await this.web3.eth.estimateGas({ data: code, to: defaultWallet });\n            generalParams.gas = ets;\n            generalParams.gasLimit = ets * 2;\n        }\n\n        const method = contract.methods[name](...params);\n\n        const GAS_PRICE = await this.web3.eth.getGasPrice();\n        const GAS = await method.estimateGas(generalParams);\n        generalParams.gas = GAS;\n        generalParams.gasLimit = GAS * 2;\n        generalParams.gasPrice = GAS_PRICE;\n\n        return new Promise((resolve, reject) => {\n            try {\n                switch (confirmation) {\n                    case EthConfirmation.RECEIPT: {\n                        method.send(generalParams).on(\"receipt\", (rec) => {\n                            resolve(rec);\n                        }).catch((err) => {\n                            reject(err);\n                        });\n                        break;\n                    }\n                    case EthConfirmation.CONFIRMATION: {\n                        method.send(generalParams).on(\"confirmation\", (confNumber, receipt) => {\n                            receipt.confNumber = confNumber;\n                            resolve(receipt);\n                        }).catch((err) => {\n                            reject(err);\n                        });\n                        break;\n                    }\n                    case EthConfirmation.STATIC: {\n                        method.call(generalParams, (err, result) => {\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve(result);\n                            }\n                        });\n                        break;\n                    }\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    public recoverAccount(pkSeed) {\n        const HDKey = new hdkey.fromMasterSeed(pkSeed);\n        const hdnode = HDKey.derive(\"m/44'/60'/0'/0/0\");\n        const privKey = hdnode._privateKey.toString();\n\n        const accounts = this.web3.eth.accounts;\n        const acc = accounts.privateKeyToAccount(\"0x\" + privKey);\n        return acc;\n    }\n\n    public toWei(amount, conversion) {\n        return this.web3.utils.toWei(amount, conversion);\n    }\n\n    public fromWeiToEther(weiValue) {\n        const ether = this.web3.utils.fromWei(weiValue, \"ether\");\n        return ether;\n    }\n\n    public isMethodPayable(name: string, abi: any[]): boolean {\n        for (const i in abi) {\n            if (abi[i].name === name) {\n                return abi[i].stateMutability !== \"nonpayable\";\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Get raw change address\n     * Unfortunately this is not working normal so far therefore it will be fallback to BlockCypher\n     * @returns {Promise<null>}\n     */\n    public async getTransactionList(address: string) {\n        return await this.getTransactionsFromBlockCypher(address);\n    }\n\n    /**\n     * Get the blocks from chain\n     * Basically we could make full client out of this\n     * @param startingBlock\n     * @param stoppingBlock\n     * @param callback\n     * @returns {Promise<any>}\n     */\n    public async scanBlockRange(startingBlock?, stoppingBlock?, callback?): Promise<any> {\n\n        // If they didn't provide an explicit stopping block, then read\n        // ALL of the blocks up to the current one.\n        const that = this;\n        const results = [];\n        return new Promise(async (resolve, reject) => {\n\n            if (!stoppingBlock) {\n                stoppingBlock = await that.web3.eth.getBlockNumber();\n            }\n\n            if (!startingBlock) {\n                startingBlock = stoppingBlock - 10;\n            }\n\n            // If they asked for a starting block that's after the stopping block,\n            // that is an error (or they're waiting for more blocks to appear,\n            // which hasn't yet happened).\n\n            if (startingBlock > stoppingBlock) {\n                return -1;\n            }\n\n            let blockNumber = startingBlock;\n            let gotError = false;\n            let numThreads = 0;\n            const startTime = new Date();\n\n            function getPercentComplete(bn) {\n                const t = stoppingBlock - startingBlock;\n                const n = bn - startingBlock;\n                return Math.floor(n / t * 100);\n            }\n\n            function scanTransactionCallback(txn, block) {\n\n                // let ether = that.web3.utils.fromWei(txn.value, \"ether\");\n                // let message = `\\r${block.timestamp} +${ether} from ${txn.from}`;\n\n                if (txn.to === that.web3.defaultAccount) {\n\n                    // A transaction credited ether into this wallet\n                    const ether = that.web3.utils.fromWei(txn.value, \"ether\");\n                    const message = `\\r${block.timestamp} +${ether} from ${txn.from}`;\n                    results.push(message);\n\n                } else if (txn.from === that.web3.defaultAccount) {\n\n                    // A transaction debitted ether from this wallet\n                    const ether = that.web3.utils.fromWei(txn.value, \"ether\");\n                    const message = `\\r${block.timestamp} -${ether} to ${txn.to}`;\n                    results.push(message);\n                }\n            }\n\n            function exitThread() {\n                if (--numThreads === 0) {\n                    const numBlocksScanned = 1 + stoppingBlock - startingBlock;\n                    const stopTime = new Date();\n                    const duration = (stopTime.getTime() - startTime.getTime()) / 1000;\n                    const blocksPerSec = Math.floor(numBlocksScanned / duration);\n                    // tslint:disable-next-line\n                    const msg = `Scanned to block ${stoppingBlock} (${numBlocksScanned} in ${duration} seconds; ${blocksPerSec} blocks/sec).`;\n                    const len = msg.length;\n                    const numSpaces = process.stdout.columns - len;\n                    const spaces = Array(1 + numSpaces).join(\" \");\n\n                    process.stdout.write(\"\\r\" + msg + spaces + \"\\n\");\n                    if (callback) {\n                        callback(gotError, stoppingBlock);\n                    }\n                }\n                resolve(results);\n                return numThreads;\n            }\n\n            function scanBlockCallback(block) {\n                if (block.transactions) {\n                    for (const i of block.transactions) {\n                        const txn = i;\n                        scanTransactionCallback(txn, block);\n                    }\n                }\n            }\n\n            function asyncScanNextBlock() {\n\n                // If we've encountered an error, stop scanning blocks\n                if (gotError) {\n                    return exitThread();\n                }\n\n                // If we've reached the end, don't scan more blocks\n                if (blockNumber > stoppingBlock) {\n                    return exitThread();\n                }\n\n                // Scan the next block and assign a callback to scan even more\n                // once that is done.\n                const myBlockNumber = blockNumber++;\n\n                // Write periodic status update so we can tell something is happening\n                if (myBlockNumber % that.maxThreads === 0 || myBlockNumber === stoppingBlock) {\n                    const pctDone = getPercentComplete(myBlockNumber);\n                    process.stdout.write(`\\rScanning block ${myBlockNumber} - ${pctDone} %`);\n                }\n\n                // Async call to getBlock() means we can run more than 1 thread\n                // at a time, which is MUCH faster for scanning.\n\n                that.web3.eth.getBlock(myBlockNumber, true, (error, block) => {\n                    if (error) {\n                        // Error retrieving this block\n                        gotError = true;\n                        // console.error(\"Error:\", error);\n                    } else {\n                        scanBlockCallback(block);\n                        asyncScanNextBlock();\n                    }\n                });\n            }\n\n            let nt;\n            for (nt = 0; nt < that.maxThreads && startingBlock + nt <= stoppingBlock; nt++) {\n                numThreads++;\n                asyncScanNextBlock();\n            }\n\n            return nt; // number of threads spawned (they'll continue processing)\n        });\n    }\n\n    private async getFeeFromBlockCypher() {\n        const res = await axios.get(\"https://api.blockcypher.com/v1/btc/test3\");\n        return res.data.result.medium_fee_per_kb;\n    }\n\n    private async getTransactionsFromBlockCypher(address: string, limit: string = \"50\") {\n        const res = await axios.get(`https://api.blockcypher.com/v1/beth/test/addrs/${address}/full?limit=${limit}`);\n        return res.data;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth/eth-engine.ts","/**\n * Augur token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class AugurTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Augur.contractAddress, ethEngine);\n  }\n}\n\nexport class AugurTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Augur.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/augur.ts","export * from \"./eth/index\";\nexport {generateMnemonic} from \"./hd-bip44/seed\";\nexport * from \"./eth-tokens\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/index.ts","export * from \"./eth-wallet\";\nexport * from \"./eth-engine\";\nexport * from \"./tokens/ERC20\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth/index.ts","import { IEthAccount } from \"./eth-account\";\nimport { EthConfirmation, EthEngine } from \"./eth-engine\";\nimport * as AppConfig from \"../config/config-eth\";\n\nexport class EthereumWallet {\n  public walletAddress: string = undefined;\n  public engine: EthEngine;\n  private abiConfiguration;\n  private appConfiguration;\n  private bin;\n\n  constructor() {\n    this.appConfiguration = AppConfig.EthConfiguration.hosts[0];\n  }\n\n  public getAddress() {\n    return \"0x\" + this.walletAddress;\n  }\n\n  public login(keystore) {\n    const acc = this.engine.login(keystore);\n    if (acc.address.length > 2) {\n      this.walletAddress = acc.address.slice(2);\n    }\n    return acc;\n  }\n\n  public create(password): IEthAccount {\n    return this.engine.createAccount(password);\n  }\n\n  public recover(privateKey?) {\n    return this.engine.recoverAccount(privateKey);\n  }\n\n  public async getbalance(address) {\n    return await this.engine.getBalance(address);\n  }\n\n  public sendAllEther(privateKey, toAddress) {\n    return this.engine.sendAllEther(privateKey, toAddress);\n  }\n\n  public isWebSocketAlive() {\n    return this.engine.isListening();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth/eth-wallet.ts","export const EthConfiguration = {\n  apihost: \"http://34.215.58.192:9984/api/v1/\",\n  wshost: \"ws://34.215.58.192:9985/api/v1/streams/valid_transactions\",\n  appid: \"DLiUBJ8NGMh6ojuFjwAqhF4L8D2hUsSH5CCcH1X648Fe\",\n  appkey: \"GgZtjS6WPDNAePNM43ZdPoJ1Ap61RU3jnsgjHqELxgHX\",\n  hosts: [\n    {\n      wshost: \"wss://swap.altcoin.io:8550\",\n      contractAddress: \"0x6d5ae9dd8f1a2582deb1b096915313459f11ba70\",\n      defaultWallet: \"0xb483f5a8c6ebA74Dc1bcef9D167E6B86Caa4C773\",\n    },\n    {\n      wshost: \"wss://swap.altcoin.io:8550\",\n      contractAddress: \"0x6d5ae9dd8f1a2582deb1b096915313459f11ba70\",\n      defaultWallet: \"0x21Fa313f2144f6E1348d91FbF0C6A3a5EEcC056D\",\n    },\n  ],\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/config/config-eth.ts","module.exports = require(\"web3/src\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"web3/src\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"hdkey\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"hdkey\"\n// module id = 8\n// module chunks = 0","/* tslint:disable */\nimport {AbiUtil} from \"../../config/abi/util/abiutil\";\nimport {EthEngine, EthConfirmation} from \"../eth-engine\";\nimport abiParams = AbiUtil.abiParams;\nimport AbiType = AbiUtil.AbiType;\nimport getAbiParams = AbiUtil.getAbiParams;\n\nexport class ERC20 {\n\n  ethEngine: EthEngine;\n  public contractAddress: string;\n\n  public constructor(contractAddress: string, ethEngine: EthEngine) {\n    this.contractAddress = contractAddress;\n    this.ethEngine = ethEngine;\n  }\n\n  @abiParams({}, {\"\": AbiType.uint256})\n  public totalSupply(): number {\n    return 0;\n  }\n\n  @abiParams({}, {\"balance\": AbiType.uint256}, {\"_owner\": AbiType.address})\n  public async balanceOf(owner: string): Promise<any> {\n\n    const abi = getAbiParams(this, \"balanceOf\");\n\n    const generalParams = {\n      from: this.ethEngine.configuration.defaultWallet\n    };\n\n    const result: any = await this.ethEngine.callFunction(\"balanceOf\", [owner], generalParams, EthConfirmation.STATIC, abi, this.contractAddress);\n    return this.ethEngine.fromWeiToEther(result);\n    //return result / Math.pow(10, getAbiParams(this, \"decimals\") - 1);\n  }\n\n  @abiParams({stateMutability: \"payable\"}, {\"\": AbiType.bool}, {\"_to\": AbiType.address}, {\"_value\": AbiType.uint256})\n  public async transfer(to: string, value: number): Promise<any> {\n    const abi = getAbiParams(this, \"transfer\");\n\n    const configParams = {\n      from: this.ethEngine.configuration.defaultWallet\n    };\n\n    const result: any = await this.ethEngine.callFunction(\"transfer\", [to, value], configParams, EthConfirmation.CONFIRMATION, abi, this.contractAddress);\n    return result;\n  }\n\n  @abiParams({stateMutability: \"payable\"}, {\"\": AbiType.bool},\n    {\"_from\": AbiType.uint256}, {\"_to\": AbiType.address}, {\"_value\": AbiType.uint256})\n  public async transferFrom(from: string, to: string, value: number): Promise<any> {\n    const abi = getAbiParams(this, \"transferFrom\");\n\n    const configParams = {\n      from: this.ethEngine.configuration.defaultWallet\n    };\n\n    const result: any = await this.ethEngine.callFunction(\"transferFrom\", [from, to, value], configParams, EthConfirmation.CONFIRMATION, abi, this.contractAddress);\n    return result;\n  }\n\n  @abiParams({stateMutability: \"payable\"}, {\"\": AbiType.bool}, {\"_spender\": AbiType.address}, {\"_value\": AbiType.uint256})\n  public async approve(spender: string, value: number): Promise<any> {\n    const abi = getAbiParams(this, \"approve\");\n\n    const configParams = {\n      from: this.ethEngine.configuration.defaultWallet\n    };\n\n    const result: any = await this.ethEngine.callFunction(\"approve\", [spender, value], configParams, EthConfirmation.CONFIRMATION, abi, this.contractAddress);\n    return result;\n  }\n\n  @abiParams({}, {\"\": AbiType.uint256}, {\"_owner\": AbiType.address}, {\"_spender\": AbiType.address})\n  public async allowance(owner: string, spender: string): Promise<any> {\n    const abi = getAbiParams(this, \"allowance\");\n\n    const configParams = {\n      from: this.ethEngine.configuration.defaultWallet\n    };\n\n    const result: any = await this.ethEngine.callFunction(\"allowance\", [owner, spender], configParams, EthConfirmation.STATIC, abi, this.contractAddress);\n    return result;\n  }\n\n  @abiParams({stateMutability: \"payable\"}, {}, {})\n  public async faucet(): Promise<any> {\n    const abi = getAbiParams(this, \"faucet\");\n\n    const configParams = {\n      from: this.ethEngine.configuration.defaultWallet\n    };\n\n    const result: any = await this.ethEngine.callFunction(\"faucet\", [], configParams, EthConfirmation.CONFIRMATION, abi, this.contractAddress);\n    return result;\n  }\n\n  // TODO: Add events\n  // event Transfer(address indexed _from, address indexed _to, uint _value);\n  // event Approval(address indexed _owner, address indexed _spender, uint _value);\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth/tokens/ERC20.ts","/* tslint:disable */\n// TODO: Find solution for test to include reflect-metadata, otherwise for build is not needed\n// import \"reflect-metadata\";\nexport module AbiUtil {\n\n  export enum AbiType {\n    uint = 0,\n    uint256 = 1,\n    address = 2,\n    bool = 3,\n    bytes32 = 4,\n    bytes20 = 5\n  }\n\n  // DUH! Do not include reflect-metadata module\n  declare abstract class Reflect {\n    public static getMetadata(metadataKey:any, target:Object, targetKey:string | symbol):any;\n    public static getOwnMetadata(metadataKey: any, target: Object, targetKey: string | symbol): any;\n    public static getOwnMetadata(metadataKey: any, target: Object): any;\n    public static defineMetadata(metadataKey: any, metadataValue: any, target: Object, targetKey?: string | symbol): void;\n  }\n\n  export const abiParams = (functionData: any, returnType: any, ...params) => {\n    return (target: any, functionName: string, descriptor: PropertyDescriptor) => {\n      let root = {} as any;\n      root.inputs = [];\n      root.constant = functionData.constant === undefined ? false : functionData.constant;\n      root.outputs = [];\n      root.name = functionName;\n      root.type = functionData.type === undefined ? \"function\" : functionData.type;\n      root.payable =  functionData.payable === undefined ? false : functionData.payable;\n      root.stateMutability = functionData.stateMutability === undefined ?  \"nonpayable\" : functionData.stateMutability;\n      if (params) {\n        params.forEach((v) => {\n          for (let ret in v) {\n            if (v.hasOwnProperty(ret)) {\n              root.inputs.push({\"name\": ret, \"type\": AbiType[v[ret]]});\n            }\n          }\n        });\n      }\n\n      for (let ret in returnType) {\n        if (returnType.hasOwnProperty(ret)) {\n          root.outputs.push({\"name\": ret, \"type\": AbiType[returnType[ret]]});\n        }\n      }\n\n      let rootData = [];\n      rootData.push(root);\n\n      Reflect.defineMetadata(\"abiParams\", rootData, target, functionName);\n    };\n  };\n\n   export const getAbiParams = (target: any, propertyKey: string) => {\n      return Reflect.getMetadata(\"abiParams\", target, propertyKey);\n   }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/config/abi/util/abiutil.ts","import * as bip39 from \"bip39\";\n\nexport const generateMnemonic = () => {\n  return bip39.generateMnemonic();\n};\nconst EXTERNAL_CHAIN = 0;\nconst INTERNAL_CHAIN = 1;\n\nexport abstract class Bip44Wallet<T> {\n  protected abstract coin;\n  private root;\n  private account = 0; // probably we will never change this\n  private interalAddressIndex = 0;\n  private externalAddressIndex = 0;\n\n  constructor(mnemonic?: string) {\n    if (!mnemonic) {\n      mnemonic = generateMnemonic();\n    }\n    const seed = bip39.mnemonicToSeed(mnemonic);\n  }\n}\n\nexport class EthBip44Wallet extends Bip44Wallet<EthBip44Wallet> {\n  protected coin = 60;\n\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/hd-bip44/seed.ts","module.exports = require(\"bip39\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bip39\"\n// module id = 12\n// module chunks = 0","export * from \"./token-factory\";\nexport * from \"./augur\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/index.ts","import {EthEngine} from \"../eth/eth-engine\";\nimport {AragonTokenMainnet, AragonTokenTestnet} from \"./aragon\";\nimport {AugurTokenMainnet, AugurTokenTestnet} from \"./augur\";\nimport {BatTokenMainnet, BatTokenTestnet} from \"./bat\";\nimport {EosTokenMainnet, EosTokenTestnet} from \"./eos\";\nimport {GnosisTokenMainnet, GnosisTokenTestnet} from \"./gnosis\";\nimport {GolemTokenMainnet, GolemTokenTestnet} from \"./golem\";\nimport {SaltTokenMainnet, SaltTokenTestnet} from \"./salt\";\nimport {CivicTokenMainnet, CivicTokenTestnet} from \"./civic\";\nimport {OmiseGoTokenMainnet, OmiseGoTokenTestnet} from \"./omisego\";\nimport {District0xTokenMainnet, District0xTokenTestnet} from \"./district0x\";\nimport {StatusNetworkTokenMainnet, StatusNetworkTokenTestnet} from \"./statusnetwork\";\nimport {SubstratumTokenMainnet, SubstratumTokenTestnet} from \"./substratum\";\nimport {TronTokenMainnet, TronTokenTestnet} from \"./tron\";\nimport {BytomTokenMainnet, BytomTokenTestnet} from \"./bytom\";\nimport {DentTokenTestnet} from \"./dent\";\nimport {PopulousTokenTestnet} from \"./populous\";\nimport {MakerTokenTestnet} from \"./maker\";\nimport {DigixDAOTokenTestnet} from \"./digixdao\";\nimport {QASHTokenTestnet} from \"./qash\";\nimport {EthosTokenTestnet} from \"./ethos\";\nimport {FunFairTokenTestnet} from \"./funfair\";\nimport {RequestNetworkTokenTestnet} from \"./requestnetwork\";\nimport {EnjinCoinTokenTestnet} from \"./enjincoin\";\nimport {MonacoTokenTestnet} from \"./monaco\";\nimport {EdgelessTokenTestnet} from \"./edgeless\";\nimport {VeChainTokenTestnet} from \"./vechain\";\nimport {ICONTokenTestnet} from \"./icon\";\nimport {ZeroXTokenTestnet} from \"./zerox\";\nimport {BancorTokenTestnet} from \"./bancor\";\nimport {IconomiTokenTestnet} from \"./iconomi\";\nimport {TenXPayTokenTestnet} from \"./tenxpay\";\nimport {StorjTokenTestnet} from \"./storj\";\n\nexport enum TOKENS {\n  AUGUR = 1,\n  GOLEM,\n  GNOSIS,\n  BAT,\n  ARAGON,\n  EOS,\n  SALT,\n  CIVIC,\n  OMISEGO,\n  DISTRICT0X,\n  STATUSNETWORK,\n  SUBSTRATUM,\n  TRON,\n  BYTOM,\n  DENT,\n  POPULOUS,\n  MAKER,\n  DIGIXDAO,\n  QASH,\n  ETHOS,\n  FUNFAIR,\n  REQUESTNETWORK,\n  BANCOR,\n  ICONOMI,\n  TENXPAY,\n  STORJ,\n  ENJINCOIN,\n  MONACO,\n  EDGELESS,\n  VECHAIN,\n  ICON,\n  ZEROX\n}\n\nexport class TokenFactory {\n  public static GetToken(token: TOKENS, engine: EthEngine, testnet: boolean = true) {\n    if (!testnet) {\n      return this.GetTokenMain(token, engine);\n    }\n\n    switch (token) {\n      case TOKENS.GOLEM: {\n        return new GolemTokenTestnet(engine);\n      }\n      case TOKENS.AUGUR: {\n        return new AugurTokenTestnet(engine);\n      }\n      case TOKENS.GNOSIS: {\n        return new GnosisTokenTestnet(engine);\n      }\n      case TOKENS.BAT: {\n        return new BatTokenTestnet(engine);\n      }\n      case TOKENS.ARAGON: {\n        return new AragonTokenTestnet(engine);\n      }\n      case TOKENS.EOS: {\n        return new EosTokenTestnet(engine);\n      }\n      case TOKENS.SALT: {\n        return new SaltTokenTestnet(engine);\n      }\n      case TOKENS.CIVIC: {\n        return new CivicTokenTestnet(engine);\n      }\n      case TOKENS.OMISEGO: {\n        return new OmiseGoTokenTestnet(engine);\n      }\n      case TOKENS.DISTRICT0X: {\n        return new District0xTokenTestnet(engine);\n      }\n      case TOKENS.STATUSNETWORK: {\n        return new StatusNetworkTokenTestnet(engine);\n      }\n      case TOKENS.SUBSTRATUM: {\n        return new SubstratumTokenTestnet(engine);\n      }\n      case TOKENS.TRON: {\n        return new TronTokenTestnet(engine);\n      }\n      case TOKENS.BYTOM: {\n        return new BytomTokenTestnet(engine);\n      }\n      case TOKENS.DENT: {\n        return new DentTokenTestnet(engine);\n      }\n      case TOKENS.POPULOUS: {\n        return new PopulousTokenTestnet(engine);\n      }\n      case TOKENS.MAKER: {\n        return new MakerTokenTestnet(engine);\n      }\n      case TOKENS.DIGIXDAO: {\n        return new DigixDAOTokenTestnet(engine);\n      }\n      case TOKENS.QASH: {\n        return new QASHTokenTestnet(engine);\n      }\n      case TOKENS.ETHOS: {\n        return new EthosTokenTestnet(engine);\n      }\n      case TOKENS.FUNFAIR: {\n        return new FunFairTokenTestnet(engine);\n      }\n      case TOKENS.REQUESTNETWORK: {\n        return new RequestNetworkTokenTestnet(engine);\n      }\n      case TOKENS.BANCOR: {\n        return new BancorTokenTestnet(engine);\n      }\n      case TOKENS.ICONOMI: {\n        return new IconomiTokenTestnet(engine);\n      }\n      case TOKENS.TENXPAY: {\n        return new TenXPayTokenTestnet(engine);\n      }\n      case TOKENS.STORJ: {\n        return new StorjTokenTestnet(engine);\n      }\n      case TOKENS.ENJINCOIN: {\n        return new EnjinCoinTokenTestnet(engine);\n      }\n      case TOKENS.MONACO: {\n        return new MonacoTokenTestnet(engine);\n      }\n      case TOKENS.EDGELESS: {\n        return new EdgelessTokenTestnet(engine);\n      }\n      case TOKENS.VECHAIN: {\n        return new VeChainTokenTestnet(engine);\n      }\n      case TOKENS.ICON: {\n        return new ICONTokenTestnet(engine);\n      }\n      case TOKENS.ZEROX: {\n        return new ZeroXTokenTestnet(engine);\n      }\n    }\n  }\n\n  public static GetTokenMain(token: TOKENS, engine: EthEngine) {\n    switch (token) {\n      case TOKENS.GOLEM: {\n        return new GolemTokenMainnet(engine);\n      }\n      case TOKENS.AUGUR: {\n        return new AugurTokenMainnet(engine);\n      }\n      case TOKENS.GNOSIS: {\n        return new GnosisTokenMainnet(engine);\n      }\n      case TOKENS.BAT: {\n        return new BatTokenMainnet(engine);\n      }\n      case TOKENS.ARAGON: {\n        return new AragonTokenMainnet(engine);\n      }\n      case TOKENS.EOS: {\n        return new EosTokenMainnet(engine);\n      }\n      case TOKENS.SALT: {\n        return new SaltTokenMainnet(engine);\n      }\n      case TOKENS.CIVIC: {\n        return new CivicTokenMainnet(engine);\n      }\n      case TOKENS.OMISEGO: {\n        return new OmiseGoTokenMainnet(engine);\n      }\n      case TOKENS.DISTRICT0X: {\n        return new District0xTokenMainnet(engine);\n      }\n      case TOKENS.STATUSNETWORK: {\n        return new StatusNetworkTokenMainnet(engine);\n      }\n      case TOKENS.SUBSTRATUM: {\n        return new SubstratumTokenMainnet(engine);\n      }\n      case TOKENS.TRON: {\n        return new TronTokenMainnet(engine);\n      }\n      case TOKENS.BYTOM: {\n        return new BytomTokenMainnet(engine);\n      }\n      case TOKENS.DENT: {\n        return new DentTokenTestnet(engine);\n      }\n      case TOKENS.POPULOUS: {\n        return new PopulousTokenTestnet(engine);\n      }\n      case TOKENS.MAKER: {\n        return new MakerTokenTestnet(engine);\n      }\n      case TOKENS.DIGIXDAO: {\n        return new DigixDAOTokenTestnet(engine);\n      }\n      case TOKENS.QASH: {\n        return new QASHTokenTestnet(engine);\n      }\n      case TOKENS.ETHOS: {\n        return new EthosTokenTestnet(engine);\n      }\n      case TOKENS.FUNFAIR: {\n        return new FunFairTokenTestnet(engine);\n      }\n      case TOKENS.REQUESTNETWORK: {\n        return new RequestNetworkTokenTestnet(engine);\n      }\n      case TOKENS.BANCOR: {\n        return new BancorTokenTestnet(engine);\n      }\n      case TOKENS.ICONOMI: {\n        return new IconomiTokenTestnet(engine);\n      }\n      case TOKENS.TENXPAY: {\n        return new TenXPayTokenTestnet(engine);\n      }\n      case TOKENS.STORJ: {\n        return new StorjTokenTestnet(engine);\n      }\n      case TOKENS.ENJINCOIN: {\n        return new EnjinCoinTokenTestnet(engine);\n      }\n      case TOKENS.MONACO: {\n        return new MonacoTokenTestnet(engine);\n      }\n      case TOKENS.EDGELESS: {\n        return new EdgelessTokenTestnet(engine);\n      }\n      case TOKENS.VECHAIN: {\n        return new VeChainTokenTestnet(engine);\n      }\n      case TOKENS.ICON: {\n        return new ICONTokenTestnet(engine);\n      }\n      case TOKENS.ZEROX: {\n        return new ZeroXTokenTestnet(engine);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/token-factory.ts","/**\n * ARAGON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class AragonTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Aragon.contractAddress, ethEngine);\n  }\n}\n\nexport class AragonTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Aragon.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/aragon.ts","/**\n * BAT token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class BatTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Bat.contractAddress, ethEngine);\n  }\n}\n\nexport class BatTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Bat.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/bat.ts","/**\n * EOS token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class EosTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Eos.contractAddress, ethEngine);\n  }\n}\n\nexport class EosTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Eos.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/eos.ts","/**\n * GNOSIS token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class GnosisTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Gnosis.contractAddress, ethEngine);\n  }\n}\n\nexport class GnosisTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Gnosis.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/gnosis.ts","/**\n * Golem token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class GolemTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Golem.contractAddress, ethEngine);\n  }\n}\n\nexport class GolemTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Golem.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/golem.ts","/**\n * SALT token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class SaltTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Salt.contractAddress, ethEngine);\n  }\n}\n\nexport class SaltTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Salt.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/salt.ts","/**\n * ARAGON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class CivicTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Civic.contractAddress, ethEngine);\n  }\n}\n\nexport class CivicTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Civic.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/civic.ts","/**\n * ARAGON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class OmiseGoTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.OmiseGo.contractAddress, ethEngine);\n  }\n}\n\nexport class OmiseGoTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.OmiseGo.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/omisego.ts","/**\n * ARAGON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class District0xTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.District0x.contractAddress, ethEngine);\n  }\n}\n\nexport class District0xTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.District0x.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/district0x.ts","/**\n * ARAGON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class StatusNetworkTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.StatusNetwork.contractAddress, ethEngine);\n  }\n}\n\nexport class StatusNetworkTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.StatusNetwork.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/statusnetwork.ts","/**\n * ARAGON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class SubstratumTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Substratum.contractAddress, ethEngine);\n  }\n}\n\nexport class SubstratumTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Substratum.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/substratum.ts","/**\n * ARAGON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class TronTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Tron.contractAddress, ethEngine);\n  }\n}\n\nexport class TronTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Tron.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/tron.ts","/**\n * ARAGON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class BytomTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Bytom.contractAddress, ethEngine);\n  }\n}\n\nexport class BytomTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Bytom.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/bytom.ts","/**\n * ARAGON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class DentTokenTestnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfig.Dent.contractAddress, ethEngine);\n  }\n}\n\nexport class DentTokenMainnet {\n  constructor(ethEngine: EthEngine) {\n    // super(TokenConfigMain.Dent.contractAddress, ethEngine);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/dent.ts","/**\n * Populous token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class PopulousTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.Populous.contractAddress, ethEngine);\n    }\n}\n\nexport class PopulousTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.Populous.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/populous.ts","/**\n * Maker token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class MakerTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.Maker.contractAddress, ethEngine);\n    }\n}\n\nexport class MakerTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.Maker.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/maker.ts","/**\n * DigixDAO token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class DigixDAOTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.DigixDAO.contractAddress, ethEngine);\n    }\n}\n\nexport class DigixDAOTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.DigixDAO.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/digixdao.ts","/**\n * QASH token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class QASHTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.QASH.contractAddress, ethEngine);\n    }\n}\n\nexport class QASHTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.QASH.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/qash.ts","/**\n * Ethos token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class EthosTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.Ethos.contractAddress, ethEngine);\n    }\n}\n\nexport class EthosTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.Ethos.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/ethos.ts","/**\n * FunFair token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class FunFairTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.FunFair.contractAddress, ethEngine);\n    }\n}\n\nexport class FunFairTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.FunFair.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/funfair.ts","/**\n * RequestNetwork token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class RequestNetworkTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.RequestNetwork.contractAddress, ethEngine);\n    }\n}\n\nexport class RequestNetworkTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.RequestNetwork.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/requestnetwork.ts","/**\n * EnjinCoin token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class EnjinCoinTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.EnjinCoin.contractAddress, ethEngine);\n    }\n}\n\nexport class EnjinCoinTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.EnjinCoin.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/enjincoin.ts","/**\n * Monaco token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class MonacoTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.Monaco.contractAddress, ethEngine);\n    }\n}\n\nexport class MonacoTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.Monaco.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/monaco.ts","/**\n * Edgeless token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class EdgelessTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.Edgeless.contractAddress, ethEngine);\n    }\n}\n\nexport class EdgelessTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.Edgeless.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/edgeless.ts","/**\n * VeChain token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class VeChainTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.VeChain.contractAddress, ethEngine);\n    }\n}\n\nexport class VeChainTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.VeChain.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/vechain.ts","/**\n * ICON token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class ICONTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.ICON.contractAddress, ethEngine);\n    }\n}\n\nexport class ICONTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.ICON.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/icon.ts","/**\n * ZeroX token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class ZeroXTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.ZeroX.contractAddress, ethEngine);\n    }\n}\n\nexport class ZeroXTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.ZeroX.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/zerox.ts","/**\n * Bancor token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class BancorTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.Bancor.contractAddress, ethEngine);\n    }\n}\n\nexport class BancorTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.Bancor.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/bancor.ts","/**\n * Iconomi token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class IconomiTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.Iconomi.contractAddress, ethEngine);\n    }\n}\n\nexport class IconomiTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.Iconomi.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/iconomi.ts","/**\n * TenXPay token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class TenXPayTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.TenXPay.contractAddress, ethEngine);\n    }\n}\n\nexport class TenXPayTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.TenXPay.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/tenxpay.ts","/**\n * Storj token interface\n */\nimport { EthEngine } from \"../eth/eth-engine\";\nimport { TokenConfig } from \"../config/tokens/tokenconfig\";\nimport { TokenConfigMain } from \"../config/tokens/tokenconfigmain\";\n\nexport class StorjTokenTestnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfig.Storj.contractAddress, ethEngine);\n    }\n}\n\nexport class StorjTokenMainnet {\n    constructor(ethEngine: EthEngine) {\n        // super(TokenConfigMain.Storj.contractAddress, ethEngine);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/eth-tokens/storj.ts"],"sourceRoot":""}